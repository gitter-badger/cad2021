<h1>About</h1>
<p>這裡是國立虎尾科技大學 - 機械設計工程系 - 電腦輔助設計實習課程網站.</p>
<p><img alt="" class="add_border" height="423" src="/images/computer_aided_design_topics.png" width="600"/></p>
<p>(from Myur Kutz, 2005, Mechanical Engineers' Handbook 4th Edition, Volume2, Part1, page3.)</p>
<p>從上述機械工程師手冊中, 有關 CAD 說明如下:</p>
<p style="padding-left: 30px;">Computer-aided design (CAD) uses the <span style="background-color: #ffff99;">mathematical</span> and <span style="background-color: #ffff99;">graphic processing power</span> of the computer to assist the engineer in the creation, modification, analysis, and display of designs.</p>
<p style="padding-left: 30px;">Many factors have contributed to CAD technology being a necessary tool in the engineering world for applications including shipbuilding, automotive, aerospace, medical, industrial, and architectural design, such as the computer's speed in processing complex equations and managing technical databases.</p>
<p>若從產品開發流程與團隊成員的角度而言, 電腦輔助設計的本質在運用電腦與周邊相關軟硬體, 以達到多人參與協同產品設計流程時, 針對每一個細節與項目, 都能夠少一點負擔 (less burden), 多一些建樹 (more achievements) 的目標, 期望在產品從概念至回收的生命週期 (life cycle) 中, 能以最少成本付出, 取得最大效益.</p>
<h4>少負擔:</h4>
<ol>
<li>能否利用高效能且具開放延伸特性的軟硬體工具執行設計, 無需安裝維護厚重且架構封閉的軟硬體設備.</li>
<li>能否運用分散式版次管理系統儲存設計內容, 無需擔心多人協同設計下,改版內容混淆, 權責無法區分, 資料因硬體故障或遭破壞而毀損.</li>
<li>將重複或繁雜的工作交由電腦處理, 設計者選擇處理較具價值, 且有助於持續提升解題知能的工作項目.</li>
</ol>
<h4>多建樹:</h4>
<ol>
<li>讓每一項投注心力的工作, 都留下歷程紀錄, 除可自我檢視成果, 也可提供他人查核驗證.</li>
<li>即時公開利用電腦輔助設計時所採用的假設, 方法, 遭遇困難, 參考資料搜尋範圍與解決方案等細節.</li>
<li>隨時做好利用電腦與網路說明設計理念與成果簡報的準備.</li>
</ol>
<p><a href="/downloads/CAD- Do Computers Aid the Design Process After All.pdf">CAD: Do Computers Aid the Design Process After All?</a> (電腦輔助設計: 電腦真的有助於設計流程嗎?)</p>
<p>至於所謂電腦輔助機械設計, 是使用電腦軟體進行機械產品相關系統設計 (包含機電與資訊整合, <a href="/downloads/nasa_systems_engineering_handbook_0.pdf">ref</a>), 並記錄產品的設計過程. 主要用於建立產品的初步設計與佈局, 提供設計細節與運算, 構建 3D 模型, 繪製並發布工程圖, 同時也與工程分析, 行銷, 製造等部門及產品用戶間進行互動.</p>
<h4>關鍵字:</h4>
<p style="padding-left: 30px;">電腦軟體, 紀錄產品設計過程, 產品初步設計與佈局, 設計細節, 設計運算, 3D 模型, 工程圖, 工程分析, 行銷, 製造, 產品用戶, 互動.</p>
<h4>這個學期的電腦輔助設計實習包括五個主題:</h4>
<ol>
<li><span style="background-color: #ffff99;">直播與討論</span> - 每一位學員都必須要配置隨身碟, 耳機, 麥克風與 webcam, 有能力主持線上會議及錄影, 開會後各學員必須針對會議內容, 錄製相關內容操作過程影片與心得報告, 各影片必須剪輯編修後配上說明字幕. 每一位學員在線上會議前, 要針對討論主題進行準備, 並在過程中針對議題發表看法, 每次開會後, 各學員將針對會議錄影與心得報告, 直接透過線上表單進行 <a href="https://wethrive.net/blog/self-evaluation-and-assessment/">self-evaluation</a> and <a href="https://en.wikipedia.org/wiki/Peer_review">peer review</a>.</li>
<li><span style="background-color: #ffff99;">MCAD</span> - 設計多軸機械手臂與周邊設施, 開發能夠自動組裝機械手臂的<a href="https://zh.wikipedia.org/wiki/%E5%BD%88%E6%80%A7%E8%A3%BD%E9%80%A0%E7%B3%BB%E7%B5%B1">彈性製造系統</a> (FMS, Flexible Manufacturing System) 與 <a href="https://en.wikipedia.org/wiki/Automated_storage_and_retrieval_system">AS/RS</a> (Automated Storage and Retrieval System) 系統.</li>
<li><span style="background-color: #ffff99;">SSO</span> - 利用 @gm 帳號作為基礎, 以 CAD 完成之各項網際輔助設計系統, 包含各組的 <a href="https://www.fossil-scm.org">Fossil SCM</a> 系統都必須透過 SSO (<a href="https://en.wikipedia.org/wiki/Single_sign-on">Single Sign-On</a>) 架構完成. 其中包括網際齒輪減速箱輔助設計系統與各套件 (Solidworks, Inventor 與 NX) 的網際零件訂製系統.</li>
<li><span style="background-color: #ffff99;">Robotics</span> - 透過圖書館所提供的 Robotics 相關電子書介紹, 整理 FMS 相關系統的原理與應用.</li>
<li><span style="background-color: #ffff99;">系統開發</span> - 在上述主題研究過程中, 所衍生其他有關的電腦輔助機械設計開發內容.</li>
</ol>
<hr/>
<p>下列是 2005 年 <a href="https://www.eecs.mit.edu/about-us/mit-eecs-department-facts">MIT</a> <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/">Structure and Interpretation of Computer Programs</a> 課程的第一週教學影片, <a href="https://www.youtube.com/watch?v=r8k8o7zkA1o">Harold Abelson</a> 教授一開場便說: computer science is not a science (當時的科系名稱為 Electric Engineering and Computer Science). It's also not really very much about computers. And that is, when some field is just getting started and you don't really understand it very well, it's very easy to confuse the essence of what you're doing with the tools that you use.</p>
<p>I think in the future people will look back and say, yes, those primitives in the 20th century were fiddling around with these gadgets called computers, but really what they were doing is starting to <span style="background-color: #ccffcc;">learn how to <a href="https://www.merriam-webster.com/dictionary/formalize">formalize</a> <a href="https://www.merriam-webster.com/dictionary/intuition">intuitions</a> about <a href="https://www.merriam-webster.com/dictionary/process">process</a>,</span> <span style="background-color: #ccffcc;">how to do things, starting to develop a way to talk precisely about how-to knowledge.</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-J_xL4IGhJA" title="YouTube video player" width="560"></iframe></p>
<p style="text-align: left;">Overview and Introduction to Lisp (<a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/">source</a>, <a href="/downloads/Overview_Into_to_Lisp.txt">Closed Caption</a>)</p>
<h4>課程倉儲, 網站, 討論區與所使用工具:</h4>
<p style="padding-left: 30px;">Repository: <a href="https://github.com/mdecourse/cad2021">https://github.com/mdecourse/cad2021</a></p>
<p style="padding-left: 30px;">Github Pages: <a href="https://mde.tw/cad2021">https://mde.tw/cad2021</a></p>
<p style="padding-left: 30px;">Zulipchat: <a href="https://kmolab.zulipchat.com">https://kmolab.zulipchat.com</a></p>
<p style="padding-left: 30px;">Onshape: <a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<p style="padding-left: 30px;">CoppeliaSim: <a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<h4>CAD 歷史與相關參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://mde.tw/cadp2018/downloads/cad_history.pdf">CAD History.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cadp2018/downloads/cadbook.pdf">CAD Book.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2005_Ten challenges in computer-aided design.pdf">2005_Ten challenges in computer-aided design.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/CadQuery/cadquery">https://github.com/CadQuery/cadquery</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/CadQuery/CQ-editor">https://github.com/CadQuery/CQ-editor</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/alainrinder/quoridor.py">https://github.com/alainrinder/quoridor.py</a>, RoboDK and CoppeliaSim</p>
<p style="padding-left: 60px;"><a href="https://github.com/Quentin18/Quoridor-Online">https://github.com/Quentin18/Quoridor-Online</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mrkvost/quoridor">https://github.com/mrkvost/quoridor</a></p>
<p style="padding-left: 60px;"><a href="https://marmelab.com/blog/2019/10/24/quoridor-part-1.html">https://marmelab.com/blog/2019/10/24/quoridor-part-1.html</a></p>
<p style="padding-left: 60px;"><a href="https://arxiv.org/pdf/1908.09453.pdf">Openspiel: framework for reinforcement learning in games</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/CadQuery/cadquery">https://github.com/CadQuery/cadquery</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/gorisanson/quoridor-ai">https://github.com/gorisanson/quoridor-ai</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/zack-hill/quoridor-web">https://github.com/zack-hill/quoridor-web</a></p>
<p style="padding-left: 60px;"><a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.100.5204&amp;rep=rep1&amp;type=pdf">Mastering Quoridor</a> (thesis)</p>
<p style="padding-left: 60px;">能夠在 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立步步為營桌遊場景, 以按鍵控制兩人, 四人或六人對陣.</p>
<p style="padding-left: 60px;">設法建立電腦程式, 可在 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 場景中與單一使用者或多使用者對陣.</p>
<p style="padding-left: 60px;">是否也能利用 <a href="https://robodk.com/">RoboDK</a> 或 <a href="https://cyberbotics.com/">Webots</a> 建立對應場景?</p>
<p style="padding-left: 60px;"><a href="https://zh.wikipedia.org/wiki/%E7%89%86%E6%A3%8B">四人步步為營桌遊</a> (<a href="https://gorisanson.github.io/quoridor-ai/">線上版</a>, <a href="https://github.com/mPelland42/Quoridor-Reinforcement-Learning">強化學習</a>, <a href="https://github.com/boriel/quoridor">AI Player</a>)</p>
<p style="padding-left: 60px;"><a href="https://bruceisonfire.net/2020/04/23/my-adventure-with-flosscad-the-birth-of-hexidor/">六人步步為營桌遊</a></p>
<h4>CAD 延伸:</h4>
<p style="padding-left: 30px;">Onshape Featurescript: <a href="https://cad.onshape.com/FsDoc/">https://cad.onshape.com/FsDoc/</a></p>
<p style="padding-left: 60px;"><a href="https://www.onshape.com/en/resource-center/videos/beginners-guide-to-featurescript">Beginner's Guide to Featurescript</a> (Video)</p>
<p style="padding-left: 60px;"><a href="https://www.onshape.com/en/features/custom-features">Custom Features</a></p>
<p style="padding-left: 60px;"><a href="https://cadlab.mde.tw/post/onshape-featurescript-spur-gear-lun-kuo-hui-tu.html">Spur Gear</a> (<a href="https://forum.onshape.com/discussion/15700/updated-spur-gear-featurescript">Update</a>)</p>
<p style="padding-left: 30px;">SolidWorks API: <a href="http://mde.tw/cad2020/content/HW1_SW.html">http://mde.tw/cad2020/content/HW1_SW.html</a></p>
<p style="padding-left: 30px;">Inventor API: <a href="http://mde.tw/cad2020/content/HW1_INV.html">http://mde.tw/cad2020/content/HW1_INV.html</a></p>
<p style="padding-left: 30px;">NX API: <a href="http://mde.tw/cad2020/content/HW1_NX.html">http://mde.tw/cad2020/content/HW1_NX.html</a></p>
<h4>電腦輔助設計室與協同設計室行事曆</h4>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Examples</h2>
<p>Onshape to Robot: <a href="https://onshape-to-robot.readthedocs.io/en/latest/">https://onshape-to-robot.readthedocs.io/en/latest/</a></p>
<p><a href="https://www.programmersought.com/article/59331583319/">Onshape to Matlab</a> </p>
<h4>Inverse Kinematics:</h4>
<p style="padding-left: 30px;">RoboDK</p>
<p style="padding-left: 30px;">CoppeliaSim</p>
<p style="padding-left: 30px;">Webots</p>
<p style="padding-left: 30px;"><a href="https://github.com/Phylliade/ikpy">https://github.com/Phylliade/ikpy</a> </p>
<p>Onshape to RoboDK, CoppeliaSim and Webots. &lt;= Machine Learning and Reinforcement Learning</p>
<p><a href="https://cad.onshape.com/documents/56298f9c90df4f577c10ec66/w/ae64289050ff20e29ab48a69/e/fb3ec7729b500dd569ef03c2?configuration=default">Onshape Ex1</a></p>
<p><img alt="" height="392" src="/images/onshape_ex1.png" width="600"/></p>
<p><a href="https://cad.onshape.com/documents/7f4c744a841bb441d1c51956/w/aa991ba802d3774f0d20487c/e/26cece3c2f3e829b22c9a35f">Onshape Ex2</a></p>
<p><img alt="" height="425" src="/images/betarobot.png" width="600"/></p>
<p><a href="/downloads/2021_Adaptation of Openai Gym for Moveo Platform.pdf">Adaptation of Openai Gym for Moveo Platform.pdf</a></p>
<p><a href="https://github.com/BCN3D/BCN3D-Moveo">https://github.com/BCN3D/BCN3D-Moveo</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/SvKoxLXjxLs" title="YouTube video player" width="560"></iframe></p><h2>Onshape</h2>
<p><a href="https://405232491.gitbooks.io/gitbook_week3/content/week10.html">https://405232491.gitbooks.io/gitbook_week3/content/week10.html</a></p>
<h4>Featurescript:</h4>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/resource-center/videos/beginners-guide-to-featurescript">https://www.onshape.com/en/resource-center/videos/beginners-guide-to-featurescript</a></p>
<p style="padding-left: 30px;"><a href="https://cad.onshape.com/FsDoc/">https://cad.onshape.com/FsDoc/</a></p>
<p style="padding-left: 30px;"><a href="https://cad.onshape.com/FsDoc/tutorials/create-a-slot-feature.html">https://cad.onshape.com/FsDoc/tutorials/create-a-slot-feature.html</a></p>
<p style="padding-left: 30px;"><a href="https://cadlab.mde.tw/post/onshape-featurescript-tutorial-dao-yin.html">Featurescript 導引</a> (<a href="https://cadlab.mde.tw/post/search.html?q=featurescript">其他參考資料</a>)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2019/content/Onshape.html">Onshape of cad2019</a></p>
<h2>Arduino</h2>
<p>Uno Simulator: <a href="https://www.sites.google.com/site/unoardusim/services">https://www.sites.google.com/site/unoardusim/services</a></p>
<h4>Picsimlab:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a></p>
<p style="padding-left: 30px;"><a href="https://lcgamboa.github.io/">https://lcgamboa.github.io/</a></p>
<p><a href="https://mplabxpress.microchip.com/mplabcloud/ide">https://mplabxpress.microchip.com/mplabcloud/ide</a></p>
<h2>Ethercalc</h2>
<p><a href="http://mde.tw/cd2021/content/Programming.html">http://mde.tw/cd2021/content/Programming.html</a></p>
<h4>有關 ethercalc:</h4>
<p>若 ethercalc 與 redis 合用, sheet 資料將會存入 /var/lib/redis/dump.rdb, 此一檔案儲存設定位於 /etc/redis/redis.conf 中的 dbfilename dump.rdb<br/><br/>使用者若要以 root 身分檢視 /var/lib/redis/dump.rdb 可以透過 sudo -s 以 root 身分執行命令.<br/><br/>若以 /etc/init.d/redis-server stop 關閉 redis, 然後執行 ethercalc, sheet 資料將會存在執行命令目錄下的 dump 目錄中.<br/><br/>在結合 redis 使用下的 ethercalc, 若希望 reset /var/lib/redis/dump.rdb 中的資料:<br/><br/>sudo -s<br/><br/>/etc/init.d/redis-server stop<br/><br/>rm /var/lib/redis/dump.rdb<br/><br/>/etc/init.d/redis-server start<br/><br/>ethercalc<br/><br/>則 /var/lib/redis/dump.rdb 中為空資料.</p>
<h2>CoppeliaSim</h2>
<p><a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<p><a href="https://robocomp.github.io/web/">https://robocomp.github.io/web/</a></p>
<p><a href="https://robocomp.github.io/web/gsoc/2019/nikhil_bansal/post02">https://robocomp.github.io/web/gsoc/2019/nikhil_bansal/post02</a></p>
<p>利用 Python <a href="https://docs.python.org/3/library/xml.etree.elementtree.html">xml 模組</a>解讀 simscene.xml 場景檔案, 列出 xml 檔案格式中的標註名稱:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import xml.etree.ElementTree as ET

# load and parse the vacant simscene xml file
xmlTree = ET.parse('cop.simscene.xml')

# tags has 1196 elements, but only 236 are unique
tags = [elem.tag for elem in xmlTree.iter()]

# let tags2 be vacant list
tags2 = []

# one by one to remove the duplicate tags
for i in tags:
    if i not in tags2:
        tags2.append(i)
print(len(tags), len(tags2))

for tag in tags:
    print(tag)
</pre>
<p><a href="/downloads/xml/xml.leo">xml.leo</a> 檔案範例, 利用 Leo Editor 檔案中的 @settings -&gt; import options -&gt; @data import-xml-tags 設定 <a href="https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm">CoppeliaSim XML</a> 檔案讀取標註. 如此就可以直接文字檔案管理 CoppeliaSim 場景模型.</p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="http://mde.tw/lab/blog/2021-kmol-notice-the-detail-difference-between-programs.html">Leo Editor replace-all 與 xml 解讀功能設定</a></p>
<p></p><h3>XML</h3>
<p>CoppeliaSim 支援<a href="https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm">模擬場景 XML 檔案</a>格式.</p>
<p>有關 <a href="https://leoeditor.com/">Leo Editor</a> @data import-xml-tags <a href="https://groups.google.com/g/leo-editor/c/kgwfUHJdM1s?pli=1">設定</a>.</p>
<p></p><h2>強化學習</h2>
<p><a href="https://github.com/timzhang642/3D-Machine-Learning">https://github.com/timzhang642/3D-Machine-Learning</a></p>
<h4>Pytorch Reinforcement Learning Library:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/thu-ml/tianshou">https://github.com/thu-ml/tianshou</a></p>
<h4>UIUC CS440:</h4>
<h4 style="padding-left: 30px;">2020:</h4>
<p style="padding-left: 60px;"><a href="https://courses.grainger.illinois.edu/cs440/fa2020/MPs/mp7/assignment7.html">https://courses.grainger.illinois.edu/cs440/fa2020/MPs/mp7/assignment7.html</a></p>
<p style="padding-left: 90px;">Snake is a famous video game originated in the 1976 arcade game Blockade. The player uses up, down, left and right to control the snake which grows in length (when it eats the food pellet), with the snake body and walls around the environment being the primary obstacle. In this assignment, you will train AI agents using reinforcement learning to play a simple version of the game snake. You will implement a TD version of the Q-learning algorithm.</p>
<h3>Snake RL</h3>
<p><a href="https://github.com/mdecourse/Snake-Reinforcement-Learning">https://github.com/mdecourse/Snake-Reinforcement-Learning</a></p>
<p>Applying basic reinforcement learning principles using the Snake game in Python<br/><br/>Snake.py is a basic snake game.<br/><br/>QLearning.py teaches an agent to play the snake game using Q-Learning. For every move, the game will send a reward. If the snake collides with itself or a wall, there is a negative reward. If the snake moves towards the food, there is a positive reward.</p>
<p>The Q matrix is initially filled with zeros. The size is (number of states, number of actions).</p>
<p>Every move that the agent makes, the Q table is updated as below:</p>
<p>Q[state, action] = reward + gamma * max(Q[new_state, :])</p>
<p>During the training phase, the agent will either choose the action with the max Q value at that state or the agent will randomly choose an action. The Q matrix is then updated using the equation above.</p>
<p>This process is repeated until the game is complete. Many games are played to update the Q matrix.</p>
<p>QLearning.py will automatically animate some samples games at various stages of the training process.</p>
<p>See below for example games using the Q matrix at various stages in the training process.</p>
<p><img alt="" height="398" src="/images/Animated_Snake_Games.gif" width="400"/></p>
<h4>References:</h4>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36">https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/snake">https://github.com/mdecourse/snake</a> </p>
<p style="padding-left: 30px;"><a href="https://www.learndatasci.com/tutorials/reinforcement-q-learning-scratch-python-openai-gym/">https://www.learndatasci.com/tutorials/reinforcement-q-learning-scratch-python-openai-gym/</a></p>
<p style="padding-left: 30px;"><a href="https://www.analyticsvidhya.com/blog/2021/04/q-learning-algorithm-with-step-by-step-implementation-using-python/">https://www.analyticsvidhya.com/blog/2021/04/q-learning-algorithm-with-step-by-step-implementation-using-python/</a></p>
<h4>Snake.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
Basic snake game for use by reinforcement learning.
Run this script to test it out in the console
'''
import numpy as np
import random


class BodyNode():
    def __init__(self, parent, x, y):
        self.parent = parent
        self.x = x
        self.y = y

    def setX(self, x):
        self.x = x

    def setY(self, y):
        self.y = y

    def setParent(self, parent):
        self.parent = parent

    def getPosition(self):
        return (self.x, self.y)
    
    def getIndex(self):
        return (self.y, self.x)


class Snake():
    def __init__(self, x, y):
        self.head = BodyNode(None, x, y)
        self.tail = self.head

    def moveBodyForwards(self):
        currentNode = self.tail
        while currentNode.parent != None:
            parentPosition = currentNode.parent.getPosition()
            currentNode.setX(parentPosition[0])
            currentNode.setY(parentPosition[1])
            currentNode = currentNode.parent

    def move(self, direction):
        (oldTailX, oldTailY) = self.tail.getPosition()
        self.moveBodyForwards()
        headPosition = self.head.getPosition()
        if direction == 0:
            # y 座標 - 1 表示往下移動 - down
            self.head.setY(headPosition[1] - 1)
        elif direction == 1:
            # x 座標 + 1 表示往右移動 - right
            self.head.setX(headPosition[0] + 1)
        elif direction == 2:
            # y 座標 + 1 表示往上移動 - up
            self.head.setY(headPosition[1] + 1)
        elif direction == 3:
            # x 座標 - 1 表示往左移動 - left
            self.head.setX(headPosition[0] - 1)
        return (oldTailX, oldTailY, *self.head.getPosition())

    def newHead(self, newX, newY):
        newHead = BodyNode(None, newX, newY)
        self.head.setParent(newHead)
        self.head = newHead
        
    def getHead(self):
        return self.head
    
    def getTail(self):
        return self.tail


class SnakeGame():
    def __init__(self, width, height):
        # arbitrary numbers to signify head, body, and food)
        # 0 for empty space
        self.headVal = 2
        self.bodyVal = 1
        self.foodVal = 7
        self.width = width
        self.height = height
        self.board = np.zeros([height, width], dtype=int)

        self.length = 1

        startX = width//2
        startY = height//2

        self.board[startX, startY] = self.headVal
        self.snake = Snake(startX, startY)
        self.spawnFood()
        self.calcState()
#        print(self.board)

    def spawnFood(self):
        # spawn food at location not occupied by snake
        emptyCells = []
        for index, value in np.ndenumerate(self.board):
            if value != self.bodyVal and value != self.headVal:
                emptyCells.append(index)
        self.foodIndex = random.choice(emptyCells)
        self.board[self.foodIndex] = self.foodVal

    def checkValid(self, direction):
        # check if move is blocked by wall
        newX, newY = self.potentialPosition(direction)
        if newX == -1 or newX == self.width:
            return False
        if newY == -1 or newY == self.height:
            return False
        # check if move is blocked by snake body
        if self.board[newY, newX] == self.bodyVal:
            return False
        return True

    def potentialPosition(self, direction):
        (newX, newY) = self.snake.getHead().getPosition()
        if direction == 0:
            newY -= 1
        elif direction == 1:
            newX += 1
        elif direction == 2:
            newY += 1
        elif direction == 3:
            newX -= 1
        return (newX, newY)

    def calcState(self):
        # state is as follows.
        # Is direction blocked by wall or snake?
        # Is food in this direction?
        # (top blocked, right blocked, down blocked, left blocked,
        # top food, right food, down food, left food)
        self.state = np.zeros(8, dtype=int)
        for i in range(4):
            self.state[i] = not self.checkValid(i)
        self.state[4:] = self.calcFoodDirection()

    def calcStateNum(self):
        # calculate an integer number for state
        # there will be 2^8 potential states but not all states are reachable
        stateNum = 0
        for i in range(8):
            stateNum += 2**i*self.state[i]
        return stateNum

    def calcFoodDirection(self):
        # food can be 1 or 2 directions eg. right and up
        # 0 is up, 1 is right, 2 is down, 3 is left
        foodDirections = np.zeros(4, dtype=int)
        dist = np.array(self.foodIndex) - np.array(self.snake.getHead().getIndex())
        if dist[0] &lt; 0:
            # down
            foodDirections[0] = 1
        elif dist[0] &gt; 0:
            # up
            foodDirections[2] = 1
        if dist[1] &gt; 0:
            # right
            foodDirections[1] = 1
        elif dist[1] &lt; 0:
            # left
            foodDirections[3] = 1
        return foodDirections

    def plottableBoard(self):
        #returns board formatted for animations
        board = np.zeros([self.width, self.height])
        currentNode = self.snake.tail
        count = 0
        while True:
            count += 1
            board[currentNode.getIndex()] = 0.2 + 0.8*count/self.length
            currentNode = currentNode.parent
            if currentNode == None:
                break
        board[self.foodIndex] = -1
        return board
        
        
    def display(self):
        for i in range(self.width+2):
            print('-', end='')
        for i in range(self.height):
            print('\n|', end='')
            for j in range(self.width):
                if self.board[i, j] == 0:
                    print(' ', end='')
                elif self.board[i, j] == self.headVal:
                    print('O', end='')
                elif self.board[i, j] == self.bodyVal:
                    print('X', end='')
                elif self.board[i, j] == self.foodVal:
                    print('*', end='')
            print('|', end='')
        print()
        for i in range(self.width+2):
            print('-', end='')
        print()
#        print(self.board)

    def makeMove(self, direction):
        gameOver = False
        if self.checkValid(direction):
            # set reward if moving in the right direction
            if self.calcFoodDirection()[direction] == 1:
                reward = 1
            else:
                reward = 0
            (headX, headY) = self.snake.getHead().getPosition()
            # set old head to body val
            self.board[headY, headX] = self.bodyVal

            # check if we got the fruit
            potX, potY = self.potentialPosition(direction)
            if self.board[potY, potX] == self.foodVal:
                # extend the snake
                self.snake.newHead(potX, potY)
                self.board[potY, potX] = self.headVal
                self.spawnFood()
                self.length += 1
                # if you want to give a higher reward for getting the fruit, uncomment below
                reward = 2
            else:
                # move the snake
                (oldTailX, oldTailY, newHeadX, newHeadY) = self.snake.move(direction)
                self.board[oldTailY, oldTailX] = 0
                self.board[newHeadY, newHeadX] = self.headVal
        else:
            reward = -2
            gameOver = True
        self.calcState()
        return (self.calcStateNum(), reward, gameOver, self.length)


if __name__ == "__main__":
    game = SnakeGame(8, 8)
    game.display()
    print("Score: 1")
    while True:
        direction = input("Input Direction (w,a,s,d or q to quit): ")
        if direction == 'w':
            new_state, reward, gameOver, score = game.makeMove(0)
        elif direction == 'a':
            new_state, reward, gameOver, score = game.makeMove(3)
        elif direction == 's':
            new_state, reward, gameOver, score = game.makeMove(2)
        elif direction == 'd':
            new_state, reward, gameOver, score = game.makeMove(1)
        elif direction == 'q':
            break
        if gameOver:
            print("Game Over, Score:", score)
            break
        else:
            game.display()
            print("Reward:", reward, "Score:", score)
</pre>
<h4>QLearning.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
Basic implementation of Q Learning without neural networks
Sometimes the machine will get stuck in an infinite loop of non-scoring moves. If so just rerun the script
'''
import random
from Snake import SnakeGame
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
#%%

def evaluateScore(Q, boardDim, numRuns, displayGame=False):
    # Run the game for a specified number of runs given a specific Q matrix
    cutoff = 100  # X moves without increasing score will cut off this game run
    scores = []
    for i in range(numRuns):
        game = SnakeGame(boardDim, boardDim)
        state = game.calcStateNum()
        score = 0
        oldScore = 0
        gameOver = False
        moveCounter = 0
        while not gameOver:
            possibleQs = Q[state, :]
            action = np.argmax(possibleQs)
            state, reward, gameOver, score = game.makeMove(action)
            if score == oldScore:
                moveCounter += 1
            else:
                oldScore = score
                moveCounter = 0
            if moveCounter &gt;= cutoff:
                # stuck going back and forth
                break
        scores.append(score)
    return np.average(scores), scores


# %%
boardDim = 16  # size of the baord

# state is as follows.
# Is direction blocked by wall or snake?
# Is food in this direction? can either be one or two directions eg (food is left) or (food is left and up)
# state =  (top blocked, right blocked, down blocked, left blocked, up food, right food, down food, left food)
# 8 boolean values. Not all states are reachable (eg states with food directions that don't make sense)
numStates = 2**8
numActions = 4  # 4 directions that the snake can move
Q = np.zeros((numStates, numActions))

# lr = 0.9 #learning rate. not used in this Q learning equation
gamma = 0.8  # discount rate
epsilon = 0.2  # exploration rate in training games
numEpisodes = 10001  # number of games to train for

Qs = np.zeros([numEpisodes, numStates, numActions])
bestLength = 0
print("Training for", numEpisodes, "games...")
for episode in range(numEpisodes):
    #    print("New Game")
    game = SnakeGame(boardDim, boardDim)
    state = game.calcStateNum()
    gameOver = False
    score = 0
    while not gameOver:
        if random.uniform(0, 1) &lt; epsilon:
            action = random.randint(0, 3)
        else:
            possibleQs = Q[state, :]
            action = np.argmax(possibleQs)
        new_state, reward, gameOver, score = game.makeMove(action)

        # http: // mnemstudio.org/path-finding-q-learning-tutorial.htm
        Q[state, action] = reward + gamma * np.max(Q[new_state, :])

        # https://towardsdatascience.com/simple-reinforcement-learning-q-learning-fcddc4b6fe56
        # Q[state, action] = Q[state, action] + lr * (reward + gamma * np.max(Q[new_state, :]) - Q[state, action])
        state = new_state
    Qs[episode, :, :] = np.copy(Q)
    if episode % 100 == 0:
        averageLength, lengths = evaluateScore(Q, boardDim, 25)
        if averageLength &gt; bestLength:
            bestLength = averageLength
            bestQ = np.copy(Q)
        print("Episode", episode, "Average snake length without exploration:", averageLength)
        
#%%
#Animate games at different episodes
print("Generating data for animation...")
#plotEpisodes = [0, 200, 300, 400, 500, 600, 700, 800, 900]
plotEpisodes = [0, 200, 400, 600, 800, 1000, 2500, 5000, 10000]
fig, axes = plt.subplots(3, 3, figsize=(9,9))

axList = []
ims = []
dataArrays = []
scores = []
labels = []

for i, row in enumerate(axes):
    for j, ax in enumerate(row):
        ax.set_title("Episode " + str(plotEpisodes[i*len(row) + j]))
        ax.get_yaxis().set_visible(False)
        ax.get_xaxis().set_visible(False)
        axList.append(ax)
        ims.append(ax.imshow(np.zeros([boardDim, boardDim]), vmin=-1, vmax=1, cmap='RdGy'))
        labels.append(ax.text(0,15, "Length: 0", bbox={'facecolor':'w', 'alpha':0.75, 'pad':1, 'edgecolor':'white'}))
        dataArrays.append(list())
        scores.append(list())
        
stopAnimation = False
maxFrames = 1000
cutoff = 100
numGames = 10
for k in range(numGames):
    games = []
    states = []
    gameOvers = []
    moveCounters = []
    oldScores = []
    for l in range(len(plotEpisodes)):
        game = SnakeGame(boardDim, boardDim)
        games.append(game)
        states.append(game.calcStateNum())
        gameOvers.append(False)
        moveCounters.append(0)
        oldScores.append(0)
    for j in range(maxFrames):
        for i in range(len(plotEpisodes)):
            possibleQs = Qs[plotEpisodes[i], :, :][states[i], :]
            action = np.argmax(possibleQs)
            states[i], reward, gameOver, score = games[i].makeMove(action)
            if gameOver:
                gameOvers[i] = True
            dataArrays[i].append(games[i].plottableBoard())
            scores[i].append(score)
            if score == oldScores[i]:
                moveCounters[i] += 1
            else:
                oldScores[i] = score
                moveCounters[i] = 0
            if moveCounters[i] &gt;= cutoff:
                # stuck going back and forth
                gameOvers[i] = True
        if not any(gameOver == False for gameOver in gameOvers):
            print("Game", k, "finished, total moves:", len(dataArrays[0]))
            break

def animate(frameNum):
    for i, im in enumerate(ims):
        labels[i].set_text("Length: " + str(scores[i][frameNum]))
        ims[i].set_data(dataArrays[i][frameNum])
    return ims+labels
print("Animating snakes at different episodes...")

numFrames = len(dataArrays[0])
ani = animation.FuncAnimation(fig, func=animate, frames=numFrames,blit=True, interval=75, repeat=False, )
plt.show(block=False)
#%%
##uncomment below if you want to output to a video file
#print("Saving to file")
#ani.save('AnimatedGames.mp4', fps=15, extra_args=['-vcodec', 'libx264'])
#print("Done")</pre>
<p>makeQconversionGraphics.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">##Generates convergence graph after QLearning script has run
#%%
usedQs = []
for index, val in np.ndenumerate(Qs[0,:,:]):
    qLine = Qs[:, index[0], index[1]][:5000]
    if any([item != 0 for item in qLine]) and qLine[-1] != 0:
        usedQs.append(np.copy(qLine))
        
usedQs = np.abs(usedQs)
y = []
finalVals = []
for i in range(len(usedQs)):
    #y.append((fullQs[j][hasSomethingList[i][0],hasSomethingList[i][1]] - maxVals[i])/maxVals[i])
    finalVal = np.mean(usedQs[i][-100:])
    finalVals.append(finalVal)
    y = (usedQs[i]-finalVal) / finalVal
    plt.plot(y,color="black",alpha=0.025)
plt.ylim(-1,0.5)
plt.title("Convergence of Q Table")
plt.ylabel("Normalized Q Value")
plt.xlabel("Episode Number")
plt.savefig("ConvergenceGraph.png", dpi=300)
plt.show()</pre>
<p></p><h1>課程主題</h1>
<p>直播與討論, MCAD, SSO, Robotics 與系統開發.</p>
<h4>Theoretical based:</h4>
<p style="padding-left: 30px;"><a href="/downloads/india_me6501_computeraideddesign.pdf">india_me6501_computeraideddesign.pdf</a> (<a href="http://rmkec.ac.in/ydeptabout.php?dept=mech">source</a>)</p>
<h4>P.E. based:</h4>
<p style="padding-left: 30px;"><a href="https://catalog.sjsu.edu/preview_course_nopop.php?catoid=1&amp;coid=3748">SJSU CAD course</a>, <a href="https://sjsu.bncollege.com/shop/BNCBTBListView?catalogId=10001&amp;langId=-1&amp;storeId=65133">3 course required materials</a> (<a href="https://www.amazon.com/Analysis-Machine-Elements-SOLIDWORKS-Simulation/dp/1630573795/ref=sr_1_1?dchild=1&amp;keywords=Analysis+of+Machine+Elements+Using+SOLIDWORKS+Simulation+2021&amp;qid=1625290670&amp;s=books&amp;sr=1-1">教科書1</a>, <a href="https://www.amazon.com/Beginners-Guide-SOLIDWORKS-2021-Level/dp/1630573868/ref=sr_1_1?dchild=1&amp;keywords=9781630573867&amp;qid=1625290885&amp;s=books&amp;sr=1-1">教科書2</a>, <a href="https://www.amazon.com/Official-Guide-Certified-SOLIDWORKS-Associate/dp/163057421X">教科書3</a>)</p>
<h4>Ours are ____ based:</h4>
<p style="padding-left: 30px;">Problem solving?</p>
<p style="padding-left: 30px;">Pre-master programs?</p>
<p style="padding-left: 30px;">FMS and AS/RS realization?</p>
<h4>MCAD 套件:</h4>
<p style="padding-left: 30px;">Solidworks 於 1995 年出現, 在解決 ____ 問題?</p>
<p style="padding-left: 30px;">Onshape 的出現, 在解決 ____ 問題? (<a href="https://www.onshape.com/en/resource-center/videos/introducing-generative-design-for-onshape">reference</a>)</p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/education/">申請 Onshape 教育版帳號</a>. 假如 Onshape 不再免費: <a href="https://solvespace.com">Solvespace</a></p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Generative_design">Generative Design</a> 時代<a href="https://www.youtube.com/watch?v=AnyM-sjXPMo">真的來臨了</a>嗎? (<a href="https://www.worldcadaccess.com/blog/computeraided_design_news/">reference</a>)</p>
<h4>Onshape videos:</h4>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/c/OnshapeInc/videos">https://www.youtube.com/c/OnshapeInc/videos</a></p>
<p style="padding-left: 30px;">Onshape weaknesses: <a href="https://www.worldcadaccess.com/blog/2021/05/onshapes-two-weaknesses.html">https://www.worldcadaccess.com/blog/2021/05/onshapes-two-weaknesses.html</a></p>
<h4>電腦輔助設計實習課程面臨的第一個問題是:</h4>
<p><a href="/downloads/Onshape vs SolidWorks July 2020.pdf">Onshape 與 Solidworks 比較.pdf</a></p>
<p style="padding-left: 30px;">我們該採用剛購買的 SolidWorks 2021 單機套件, 目前只能支援 IPv4 網路協定認證 (校方安裝認證的 AutoDesk Inventor 已經支援 IPv6 網路協定認證), 還是直接採用近端免安裝, 可以利用瀏覽器使用的 Onshape？</p>
<p style="padding-left: 30px;">就方便性而言, 採用 Onshape 有許多優點, 但 SolidWorks 仍然是目前台灣業界普遍採用的參數式電腦輔助設計軟體, 因此若最後仍無法在純 IPv6 環境下取得使用授權, 仍可以設法在上課前五分鐘先以 IPv4 協定上網取得 SolidWorks 的使用授權後, 再切換至純 IPv6 的網路環境 (Why?). 然後主要的零組件繪圖軟體仍以 Onshape 為主.</p>
<p style="padding-left: 30px;">AutoDesk Inventor 呢? 其他 NX12 以及 Solvespace 等三套用不用? Inventor 與 NX12 仍會用於透過 Python API 網際程式介面修改既有零件參數尺寸的範例中, 而 Solvespace 則仍會納入透過 Msys2 進行編譯後, 可產生基本參數零組件的課程主題中, 假如 Solvespace 也能用於網際程式 API 零件訂製中的一環, 當然更好.</p>
<p style="padding-left: 30px;">至於為何要在電腦輔助設計室採用純 IPv6 網路連線, 主要原因在於只有如此才能有足夠的頻寬聯外, 讓所有學員都能將近端的個人或協同分組倉儲的改版資料送到 Github.com, Gitlab.com 與 Heroku.</p>
<p>Git 與 Fossil SCM 的出現分別在解決 ____ 問題?</p>
<h4>電腦輔助設計實習課程面臨的第二個問題是:</h4>
<p style="padding-left: 30px;">課程的主軸為何? 在承接計算機程式與網際內容管理課程之後, 我們希望能夠儘量透過程式方法, 協助解決機電整合產品設計與開發上所面臨的問題. 其中包括:</p>
<p style="padding-left: 30px;">1. 設計歷程中版本保留的議題 - 採用 CMSiMDE 與 Github, Gitlab, Heroku 及 Fossil SCM 再加上 Onshape 中的設計繪圖版本進行管理.</p>
<p style="padding-left: 30px;">2. 從 CAD 轉檔至 CoppeliaSim 時, 能否透過程式方法加速建模流程?</p>
<p style="padding-left: 30px;">3. 產品設計報告除了 CMSiMDE 中的網頁, 簡報與網誌外, 能夠直接透過 Github Actions 適時建立所需的 pdf 文件與雙欄位論文格式檔案?</p>
<p style="padding-left: 30px;">4. 希望在 CoppeliaSim 場景中建立自動化機電整合製造系統, 能否透過手動 IK, 純程式設定 IK 與客製化 IK  運算模組進行模擬運算?</p>
<p style="padding-left: 30px;">5. CMSiMDE html 是否能夠透過 <a href="https://github.com/showdownjs/showdown">https://github.com/showdownjs/showdown</a> 轉為 Markdown 檔案後, 進一步再透過 Pandoc 轉為 LaTeX 或 pdf, 以便實現產品開發流程中的 <a href="https://en.wikipedia.org/wiki/Literate_programming">Literate Programming </a>架構.</p>
<p style="padding-left: 60px;">It’s been more than three decades since literate programming was invented by the legendary Donald Knuth. Its promise was immense — creating software which was more reliable, more understandable, more maintainable, and with hugely more teaching value — software which targeted both humans and computers.</p>
<p style="padding-left: 60px;">What if we replace the software with physical product, <span style="background-color: #ffff99;">can we reach out a more reliable, more understandable, more maintainable, and with hugely more teaching value product which targeted both humans and computers.</span></p>
<p style="padding-left: 60px;"><span style="background-color: #ffff99;">意即: 如何能夠在人與電腦雙重導向的架構中, 完成更可靠, 更令人容易理解, 更易於維護且具備教育價值的產品開發流程.</span></p>
<p style="padding-left: 60px;"><span style="background-color: #ccffcc;">更可靠</span> - 設計資料不易丟失, 每一個環節都能接受驗證, 針對設計流程提出可信賴且正確運算的結果.</p>
<p style="padding-left: 60px;"><span style="background-color: #ccffcc;">更令人容易理解</span> - 列出與設計相關的每一項細節, 背景說明及參考資料.</p>
<p style="padding-left: 60px;"><span style="background-color: #ccffcc;">更容易維護</span> - 不斷思索如何讓產品設計流程更加快速便捷, 易於管理.</p>
<p style="padding-left: 60px;"><span style="background-color: #ccffcc;">具備教育價值</span> - 留下產品設計歷程中進行決策的所有細節, 並舉出當時所面臨的環境與條件選項, 以供參考追蹤學習.</p>
<p>電腦輔助設計實習課程應該要解決 ____ 問題?</p>
<h4>然後呢?</h4>
<ol>
<li>從 <a href="https://www.pbr-book.org/">https://www.pbr-book.org/</a> 帶出 <a href="https://cyberbotics.com/">Webots </a>也許是下一階段有關電腦輔助與協同產品設計相關課程應該進入的領域. (<a href="https://cyberbotics.com/doc/guide/samples-rendering">https://cyberbotics.com/doc/guide/samples-rendering</a>)</li>
<li>Oauth2 從取得使用者登入帳號之後, 再根據 session 中的資料與 Fossil SCM 的 password management, 或許就能有效連結 Google, Github, Gitlab 帳號. 亦即, 當網際 Python 程式經由 Oauth2 取得使用者帳號後, 就發出一則 SQL, 讓該用戶在 Fossil SCM 視為已經登入, 如此便可由該帳號對所屬 Fossil SCM 倉儲進行管理. (<a href="https://github.com/mdecourse/fossiloauth">https://github.com/mdecourse/fossiloauth</a>)</li>
<li>繼續探究 <a href="https://www.coppeliarobotics.com/helpFiles/en/PyRep.htm">https://www.coppeliarobotics.com/helpFiles/en/PyRep.htm</a> 在機電整合系統中與視覺辨識及強化學習相關應用.</li>
</ol>
<h4>利用 <a href="https://www.onshape.com/en/">Onshape</a> 設計繪圖 (教學使用 course At mde):</h4>
<p style="padding-left: 30px;"><a href="https://learn.onshape.com/collections/onshape-fundamentals-cad">https://learn.onshape.com/collections/onshape-fundamentals-cad</a></p>
<p style="padding-left: 30px;">Onshape Forum: <a href="https://forum.onshape.com/">https://forum.onshape.com/</a></p>
<p style="padding-left: 30px;">Can we joint <a href="https://dev-portal.onshape.com/">https://dev-portal.onshape.com/</a></p>
<p style="padding-left: 30px;"><a href="https://cad.onshape.com/documents/d696553a0a6faad6a14608cd/w/f06420e3afff11bc144d91b6/e/d262ede0a6df1b9bda3cfaa3">Conveyor Calculator</a></p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/resource-center/innovation-blog/how-the-dhl-product-development-team-drives-change-from-the-digital-to-the-physical-world">Digital Manufacturing with Onshape</a></p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/resource-center/articles/how-to-onboard-your-first-robotics-team">https://www.onshape.com/en/resource-center/articles/how-to-onboard-your-first-robotics-team</a></p>
<p style="padding-left: 30px;">Featurescript: <a href="https://cad.onshape.com/FsDoc/">https://cad.onshape.com/FsDoc/</a></p>
<p style="padding-left: 30px;"><a href="https://cadlab.mde.tw/post/tag/featurescript.html">Featurescript 參考資料</a></p>
<p style="padding-left: 30px;"><a href="https://cadlab.mde.tw/post/onshape-featurescript-spur-gear-lun-kuo-hui-tu.html">利用 Featurescript 建立正齒輪程式庫</a> (<a href="https://forum.onshape.com/discussion/12532/update-to-featurescript-spur-gear">Onshape 版本</a>)</p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/features/custom-features">https://www.onshape.com/en/features/custom-features</a></p>
<p>六軸機械手臂在解決 ____ 問題?</p>
<h4>Onshape and CoppeliaSim to create an automation assembly line:</h4>
<p style="padding-left: 30px;"><a href="http://mde.tw/cd2021/content/%E5%85%AD%E8%BB%B8%E6%A9%9F%E6%A2%B0%E8%87%82%E6%A8%A1%E5%9E%8B.html">六軸機械手臂零組件</a></p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm</a></p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm">https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm</a></p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/simUI-widgets.htm">https://www.coppeliarobotics.com/helpFiles/en/simUI-widgets.htm</a></p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">https://www.coppeliarobotics.com/helpFiles/en/importExport.htm</a></p>
<h4 style="padding-left: 30px;">IK and Automation:</h4>
<p style="padding-left: 60px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm">https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm</a></p>
<p style="padding-left: 60px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/basicsOnIkGroupsAndIkElements.htm">https://www.coppeliarobotics.com/helpFiles/en/basicsOnIkGroupsAndIkElements.htm</a></p>
<p style="padding-left: 60px;"><a href="https://www.researchgate.net/publication/351561339_An_Inverse_Kinematics_Demonstration_of_a_Custom_Robot_using_C_and_CoppeliaSim/link/609d4bfb458515c2658c7c52/download">IK example</a> (use Onshape create robot assembly and use Lua and Python to control the robot)</p>
<p style="padding-left: 30px;"></p><h2>直播與討論</h2>
<p>電腦輔助設計實習課程開設目的在:</p>
<ol>
<li>教導學員收集, 閱讀並整理與 Computer Aided Mechanical Design 有關的知識.</li>
<li>引導學員運用所整理的知識, 藉由實作與練習, 解決"<span style="background-color: #ffff99;">設計多軸機械手臂與周邊設施, 開發能夠自動組裝機械手臂的<a href="https://zh.wikipedia.org/wiki/%E5%BD%88%E6%80%A7%E8%A3%BD%E9%80%A0%E7%B3%BB%E7%B5%B1" style="background-color: #ffff99;">彈性製造系統</a> (Flexible Manufacturing System) 與 <a href="https://en.wikipedia.org/wiki/Automated_storage_and_retrieval_system" style="background-color: #ffff99;">AS/RS</a> (Automated Storage and Retrieval System) 系統</span>"過程所遭遇的各種問題.</li>
<li>鼓勵學員將學習過程所遭遇的問題或成果, 仔細描述後寫成網誌, 其中必須有系統地說明如何搜尋相關資料, 如何擬定解題步驟, 並利用帶字幕的影片說明實作與練習過程.</li>
<li>讓各學員於課程項目實作與練習自評階段時, 能夠提供可定量化與定性化的表格後, 再總結給分.</li>
<li>讓各學員於互評階段時, 能根據上述受評者所提供的網誌, 操作影片與自評參考內容後, 再總結給分.</li>
</ol>
<h4>個人倉儲與網站:</h4>
<p style="padding-left: 30px;">為何參與電腦輔助設計流程的工程師需要運用分散式版次管理系統與雲端網站?</p>
<p style="padding-left: 30px;">版次管理系統在解決 ____ 問題?</p>
<p style="padding-left: 30px;">為何電腦輔助設計相關檔案與設計內容需要分散式管理? 筆電被汽車碾碎之後, 導致研究數據及論文內容丟失, 而無法及時畢業, 該不該令人同情?</p>
<p style="padding-left: 30px;">為何電腦輔助設計流程強調輕薄短小, 敏捷 (<a href="https://en.wikipedia.org/wiki/Agile_software_development">agile</a>) 迅速? 是因為現代人所處的環境瞬息萬變? 還是因為 ____ ?</p>
<p style="padding-left: 30px;">為何少負擔多建樹會是參與協同電腦輔助設計專案流程的重要貢獻指標?</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-73842-0">The Scrum Culture</a> (校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-59978-6">Knowledge Management</a> (校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-33916-0">Grammar for Teachers</a> (校園網路下載電子書)</p>
<h4 style="padding-left: 30px;">少負擔:</h4>
<p style="padding-left: 60px;">無需厚重的軟硬體工具, 就可以完成團隊直播會議中所指定 (assign) 的工作.</p>
<p style="padding-left: 60px;">無需擔心電腦輔助設計檔案會丟失, 近端硬碟會損壞, 網路會斷線, 電腦會當機.</p>
<p style="padding-left: 60px;">無需擔心團隊工作過程中, 重要的貢獻會被忽視或掩蓋, 團隊直播會議中會沒有發言內容.</p>
<p style="padding-left: 60px;">有沒有好方法可以解決此刻分組團隊正在頭痛的電腦輔助設計問題?</p>
<h4 style="padding-left: 30px;">多建樹:</h4>
<p style="padding-left: 60px;">任何一項工作進度, 都有佐證用的操作影片與提交紀錄可以供人檢視查驗</p>
<p style="padding-left: 60px;">時刻都在思考並搜尋每一項工作任務, 是否可以採用更好的作法解題, 是否已經有人克服相關難題.</p>
<p style="padding-left: 30px;">cmstemplate: <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p style="padding-left: 30px;">CMSiMDE: <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a></p>
<h4>直播與錄影:</h4>
<p style="padding-left: 30px;">課程直播與分組討論直播 - Microphone 與 Webcam 選擇與推薦.</p>
<p style="padding-left: 30px;"><a href="https://meet.google.com">Google Meet</a>, <a href="https://obsproject.com/">OBS</a> + <a href="https://www.youtube.com/">Youtube</a>, <a href="https://jitsi.org/,">https://jitsi.org/,</a> <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/zoomit">zoomit</a>, <a href="https://github.com/ShareX/ShareX">Sharex</a> (直播錄影過程是否可再同時進行其他示範錄影?), <a href="https://github.com/FFmpeg/FFmpeg">FFmpeg</a> 應用等議題.</p>
<h4>課程討論區:</h4>
<h4 style="padding-left: 30px;">Gitter:</h4>
<p style="padding-left: 60px;"><a href="https://gitter.im/">https://gitter.im/</a></p>
<p style="padding-left: 60px;"><a href="https://gitter.im/mdecourse/cad2021">https://gitter.im/mdecourse/cad2021</a></p>
<h4 style="padding-left: 30px;">Zulip:</h4>
<p style="padding-left: 60px;">為什麼要使用 Zulip?</p>
<p style="padding-left: 60px;">學習使用 <a href="https://kmolab.zulipchat.com">https://kmolab.zulipchat.com</a></p>
<h4 style="padding-left: 30px;">Fossil SCM:</h4>
<p style="padding-left: 60px;">Forum 與 Chat</p><h2>CAD</h2>
<p><a href="/downloads/Automatically Generating 60,000 CAD Variantsfor Big Data Applications.pdf">Automatically Generating 60,000 CAD Variantsfor Big Data Applications.pdf</a></p>
<p><a href="https://towardsdatascience.com/suggestive-computer-aided-design-a9c7698c1cc9">https://towardsdatascience.com/suggestive-computer-aided-design-a9c7698c1cc9</a></p>
<p><a href="/downloads/Computer Aided Design as Language.pdf">Computer Aided Design as Language.pdf</a></p>
<p><a href="/downloads/Integrating Deep Learning into CAD:CAE System Generative Design and Evaluation of3D Conceptual Wheel.pdf">Integrating Deep Learning into CAD/CAE System Generative Design and Evaluation of3D Conceptual Wheel.pdf</a></p>
<p style="padding-left: 30px;">Computer-Aided Design (CAD) applications are used in manufacturing to model everything from coffee mugs to sports cars. These programs are complex and require years of training and experience to master. A component of all CAD models particularly difficult to make are the highly structured 2D sketches thatlie at the heart of every 3D construction. In this work, we propose a machine learning model capable of automatically generating such sketches. Through this, we pave the way for developing intelligent tools that would help engineers <span style="background-color: #ffff99;">create better designs with less effort</span>. Our method is a combination of a general-purpose language modeling technique alongside an off-the-shelf data serialization protocol. We show that our approach has enough flexibility to accommodate the complexity of the domain and performs well for both unconditional synthesis and image-to-sketch translation.</p>
<h4>SolidWorks</h4>
<p>SolidWorks Robot model import into CoppeliaSim</p>
<p><a href="https://www.youtube.com/watch?v=jfUA2W-niIc">https://www.youtube.com/watch?v=jfUA2W-niIc</a></p>
<h4>URDF:</h4>
<p style="padding-left: 30px;">Unified Robotic Description Format (<a href="https://github.com/ros/urdf">URDF</a>) is an XML file format used in ROS to describe all elements of a robot.</p>
<p style="padding-left: 30px;"><a href="http://wiki.ros.org/urdf/XML/model">http://wiki.ros.org/urdf/XML/model</a></p>
<p style="padding-left: 30px;">Intro to URDF: <a href="https://industrial-training-master.readthedocs.io/en/melodic/_source/session3/Intro-to-URDF.html">https://industrial-training-master.readthedocs.io/en/melodic/_source/session3/Intro-to-URDF.html</a></p>
<p style="padding-left: 30px;"><a href="http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch">Building a Visual Robot Model with URDF from Scratch</a></p>
<p style="padding-left: 30px;">Use Python to generate URDF: <a href="https://github.com/mdecourse/odio_urdf">https://github.com/mdecourse/odio_urdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/yanshil/Fusion2PyBullet">https://github.com/yanshil/Fusion2PyBullet</a> (Pybullet)</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/urdf2webots">https://github.com/mdecourse/urdf2webots</a> (Webots)</p>
<p style="padding-left: 30px;"><a href="https://github.com/dfki-ric/phobos">https://github.com/dfki-ric/phobos</a> (Blender)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0M2b1p6H20o" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/K4QWuTMxnsY" title="YouTube video player" width="560"></iframe></p>
<h4>simExtURDF:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/CoppeliaRobotics/simExtURDF">https://github.com/CoppeliaRobotics/simExtURDF</a></p><h3>Compile Solvespace</h3>
<p>Solvespace 可用來解決 ____ 問題?</p>
<p>能夠自行編譯 Solvespace 參數式 3D 零組件繪圖套件的意義何在?</p>
<p>了解 Solvespace 套件的<a href="https://solvespace.com/tech.pl">設計原理</a>, 對於機械產品開發有任何意義嗎?</p>
<h4 style="text-align: left;">Don’t confuse essence with tools. 到底在說什麼?</h4>
<p>電腦輔助設計的 <a href="https://www.merriam-webster.com/dictionary/essence">essence</a> 是 ____?</p>
<hr/>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-73132-2">Guide to Scientific Computing in C++</a> (校園網路下載電子書)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4471-5601-7">Concise Guide to Databases</a> (校園網路下載電子書)</p>
<p>由於利用 <a href="https://www.msys2.org/">MSYS2</a> 編譯 Solvespace, 需要 install cmake</p>
<p style="padding-left: 30px;">pacman -S mingw-w64-x86_64-cmake</p>
<p>而且必須 rename Y:\msys64_20210419\mingw64\bin\sh.exe 與 Y:\portablegit_2.31.1\bin\sh.exe 換成其他名稱.</p>
<p>git clone --recurse-submodules https://github.com/solvespace/solvespace.git<br/>cd solvespace<br/>mkdir build<br/>cd build<br/>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>make<br/><br/>need libwinpthread-1.dll to execute solvespace.exe</p><h3>CAD in Rust</h3>
<p><a href="https://drive.google.com/file/d/1SDLtjyddvFs9OHobMu7Ddx6Doa15RVMY/view?usp=sharing">rust_1.53.0_portable_for_msys2.7z</a> (下載 147MB , 解開壓縮後 1.13GB)</p>
<p>Rust Playground: <a href="https://play.rust-lang.org/">https://play.rust-lang.org/</a></p>
<p><a href="https://doc.rust-lang.org/stable/book/">https://doc.rust-lang.org/stable/book/</a></p>
<h4>Upenn Rust Programming:</h4>
<p style="padding-left: 30px;"><strong></strong><a href="https://www.cis.upenn.edu/~cis198/">https://www.cis.upenn.edu/~cis198/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/upenn-cis198">https://github.com/upenn-cis198</a></p>
<h4>Umd Organization of Programming Language:</h4>
<p style="padding-left: 30px;"><a href="https://www.cs.umd.edu/class/fall2020/cmsc330/">https://www.cs.umd.edu/class/fall2020/cmsc330/</a></p>
<p style="padding-left: 30px;"><a href="https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/27-rust-introduct.pdf">https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/27-rust-introduct.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/28-ownership.pdf">https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/28-ownership.pdf</a> </p>
<p style="padding-left: 30px;"><a href="https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/29-collections.pdf">https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/29-collections.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/30-structs-enums.pdf">https://www.cs.umd.edu/class/fall2020/cmsc330/lectures/30-structs-enums.pdf</a> </p>
<h4>Geometric Constraints Solver:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/constraints">https://github.com/mdecourse/constraints</a> (In Rust)</p>
<p style="padding-left: 30px;"><a href="https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/">https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/</a></p>
<h4>A Rust CAD system:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/arcs">https://github.com/mdecourse/arcs</a></p>
<p style="padding-left: 60px;"><a href="https://adventures.michaelfbryan.com/posts/ecs-outside-of-games/">https://adventures.michaelfbryan.com/posts/ecs-outside-of-games/</a></p>
<h4>Rust for Linux:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/Rust-for-Linux/linux">https://github.com/Rust-for-Linux/linux</a></p>
<h4>Planar Linkage in Rust:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/KmolYuan/four-bar-rs">https://github.com/KmolYuan/four-bar-rs</a></p>
<p style="padding-left: 60px;"><a href="https://kmolyuan.github.io/four-bar-rs/">https://kmolyuan.github.io/four-bar-rs/</a></p><h3>DSL</h3>
<h4>Domain-Specific Languages</h4>
<h4 style="padding-left: 30px;">Taichi:</h4>
<p style="padding-left: 60px;"><a href="https://taichi.graphics/">https://taichi.graphics/</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/taichi-dev/taichi">https://github.com/taichi-dev/taichi</a></p>
<p style="padding-left: 60px;"><a href="https://yuanming.taichi.graphics/publication/2020-taichi-tutorial/taichi-tutorial.pdf">Taichi Tutorial</a></p>
<p style="padding-left: 60px;"><a href="https://dl.acm.org/doi/pdf/10.1145/3355089.3356506">Taichi: A Language for High-Performance Computation on Spatially Sparse Data Structures</a></p>
<h4 style="padding-left: 30px;">Life of a Taichi Kernel:</h4>
<p><img caption="false" height="285" src="/images/life_of_taichi_kernel.png" width="560"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wKw8LMF3Djo" title="YouTube video player" width="560"></iframe></p>
<h4 style="padding-left: 30px;">Featurescript</h4>
<p style="padding-left: 60px;"><a href="https://cad.onshape.com/FsDoc/">https://cad.onshape.com/FsDoc/</a> 能做什麼?</p>
<p style="padding-left: 60px;"><a href="http://cadlab.mde.tw/post/onshape-featurescript-cheng-shi-yu-yan.html">http://cadlab.mde.tw/post/onshape-featurescript-cheng-shi-yu-yan.html</a></p>
<p style="padding-left: 60px;"><a href="https://cadlab.mde.tw/post/tag/featurescript.html">https://cadlab.mde.tw/post/tag/featurescript.html</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/dcowden/featurescript">https://github.com/dcowden/featurescript</a></p>
<p style="padding-left: 60px;"><a href="https://www.onshape.com/en/features/custom-features">https://www.onshape.com/en/features/custom-features</a></p>
<h4 style="padding-left: 60px;">A Big CAD dataset for geometric deep learning:</h4>
<p style="padding-left: 90px;"><a href="https://deep-geometry.github.io/abc-dataset/">https://deep-geometry.github.io/abc-dataset/</a></p>
<p style="padding-left: 90px;"><a href="https://deep-geometry.github.io/abc-dataset/">https://deep-geometry.github.io/abc-dataset/</a></p><h3>Open CAD</h3>
<h4>CAD in Python:</h4>
<h4 style="padding-left: 30px;">純 Python 2D CAD:</h4>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/pyurcad">https://github.com/mdecourse/pyurcad</a></p>
<h4 style="padding-left: 30px;">3D:</h4>
<p style="padding-left: 60px;"><a href="https://sites.google.com/site/3dprogramminginpython/">https://sites.google.com/site/3dprogramminginpython/</a></p>
<h4>LeoCAD in C++ and Qt5:</h4>
<h4 style="padding-left: 30px;">編譯 LeoCAD:</h4>
<p style="padding-left: 60px;"><a href="https://www.leocad.org/docs/compiling.html">https://www.leocad.org/docs/compiling.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/leozide/leocad">原始碼: https://github.com/leozide/leocad</a></p>
<h4>Xeogl:</h4>
<p style="padding-left: 30px;"><a href="https://cx20.github.io/webgl-test/">https://cx20.github.io/webgl-test/</a></p>
<p style="padding-left: 30px;"><a href="http://xeogl.org/">http://xeogl.org/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/cx20/webgl-test">https://github.com/cx20/webgl-test</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/gPzBw1uG2Ms" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/aGWMKq5ZuYM" title="YouTube video player" width="560"></iframe></p><h3>Bevel Gears</h3>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="https://hackaday.io/project/174370-minamil-a-minimal-cnc-mill-and-friends/log/185917-bevel-gears-twos-company">https://hackaday.io/project/174370-minamil-a-minimal-cnc-mill-and-friends/log/185917-bevel-gears-twos-company</a></p>
<h4>Featurescript (<a href="https://cad.onshape.com/documents/9b04fb889def400dfd4a693f/v/7e4070a95d663f4afeb156f3/e/786005a281331572a0efe88b">source</a>, <a href="https://forum.onshape.com/discussion/6031/bevel-gear-pair-generator">discussion</a>):</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">/*    
    Bevel Gear pair
    
    This custom feature creates a bevel gear pair.
    
    TODO:
     - use better tooth profile. See:
         https://cad.onshape.com/documents/5742c8cde4b06c68b362d748/v/c65839fc6078faeb4d2aece1/e/01a666571e625f8b819fd75b
*/

FeatureScript 531;
import(path : "onshape/std/geometry.fs", version : "531.0");


annotation { "Feature Type Name": "Bevel Gear Pair", "Filter Selector": ["bevel", "gear"]}
export const BevelGearPair = defineFeature(function(context is Context, id is Id, definition is map)
    precondition
    {
        annotation {"Name": "Number of teeth for gear 1"}
        isInteger(definition.Z1, TEETH_BOUNDS);
        
        annotation {"Name": "Number of teeth for gear 2"}
        isInteger(definition.Z2, TEETH_BOUNDS);

        annotation {"Name": "Module"}
        isReal(definition.m, MODULE_BOUNDS);

        annotation {"Name": "Shafts angle"}
        isAngle(definition.theta, SHAFT_ANGLE_BOUNDS);

        annotation {"Name": "Teeth width"}
        isLength(definition.e, TEETH_WIDTH_BOUNDS);
        
        annotation {"Name": "Height 1"}
        isLength(definition.h1, H1_BOUNDS);
        
        annotation {"Name": "Height 2"}
        isLength(definition.h2, H2_BOUNDS);
        
        annotation {"Name": "Pressure angle"}
        isAngle(definition.alpha, PRESSURE_ANGLE_BOUNDS);
    }
    
    {
        // lambdas
        // pitch apex to outside pitch distance for a bevel gears pair
        var pitchApex = function(r1, r2, theta) { return r2 * sin(theta) + (r2 * cos(theta) + r1) / tan(theta); };
        
        // cone distance (R) for a bevel gears pair
        var coneDistance = function(r1, r2, theta) { return sqrt(pitchApex(r1, r2, theta) ^ 2 + r1 ^ 2); };

        // common values for a gear pair
        const addendum = 1 * definition.m * millimeter;
        const dedendum = 1.25 * definition.m * millimeter;
        const r1 = definition.m * definition.Z1 / 2 * millimeter;  // external pitch radius
        const r2 = definition.m * definition.Z2 / 2 * millimeter;
        const delta1 = atan(sin(definition.theta) / (definition.Z2 / definition.Z1 + cos(definition.theta)));
        const delta2 = atan(sin(definition.theta) / (definition.Z1 / definition.Z2 + cos(definition.theta)));
        const scale_ = 1 - definition.e / coneDistance(r1, r2, definition.theta);  // scale factor for teeth generation

        // gear 1
        var value1 = {
            Z: definition.Z1,
            delta: delta1,
            scale: scale_,
            shift1: 0 * millimeter,
            shift2: 0 * millimeter,
            rot: 0 * degree,
            turn: 0
        };
        bevelGear(context, id + "1", definition, value1);

        // gear 2
        var turn_;
        if ((definition.Z2 % 2) != 0) {
            turn_ = 0;
        }
        else {
            turn_ = 1;
        }
        var value2 = {
            Z: definition.Z2,
            delta: delta2,
            scale: scale_,
            shift1: pitchApex(r1, r2, definition.theta) + dedendum * sin(delta1),
            shift2: pitchApex(r2, r1, definition.theta) + dedendum * sin(delta2),
            rot: definition.theta,
            turn: turn_
        };
        bevelGear(context, id + "2", definition, value2);

    }, {});


function bevelGear(context is Context, id is Id, definition is map, value is map)
{
    /*
    value = {
        Z,
        delta,
        scale,
        shift1,
        shift2,
        rot,
        turn
    }
    */

    // compute gear geometry
    const addendum = 1 * definition.m * millimeter;
    const dedendum = 1.25 * definition.m * millimeter;
    const r = definition.m * value.Z / 2 * millimeter;  // external pitch radius
    const ri = r - definition.e * sin(value.delta);     // internal pitch radius
    const h1 = dedendum * sin(value.delta) + definition.e * cos(value.delta) - dedendum * value.scale * sin(value.delta);
    const ra1 = r + addendum * cos(value.delta);
    const rf1 = r - dedendum * cos(value.delta);
    const ra2 = ri + addendum * cos(value.delta) * value.scale;
    const rf2 = ri - dedendum * cos(value.delta) * value.scale;
    const rf1p = rf1 - definition.h1 / tan(value.delta);
    const rf2p = rf2 - definition.h2 / tan(value.delta);
    //const rf2pp = rf2 - h1 / tan(value.delta);

    const plane1 = plane(vector(0, 0, 0) * millimeter, vector(0, -1, 0), vector(1, 0, 0));
    const sketch1 = newSketchOnPlane(context, id + "sketch1", {"sketchPlane": plane1});
    
    skPolyline(sketch1, "polyline1", {
        points : [
            vector(0 * millimeter, -definition.h1),
            vector(rf1p, -definition.h1),
            vector(rf1, 0 * millimeter),
            vector(rf2, h1),
            vector(rf2p, h1 - definition.h2),
            vector(0 * millimeter, h1 - definition.h2),
            vector(0 * millimeter, -definition.h1)
        ],
        constrained: true
    });

    skSolve(sketch1);

    // rotate extrude segments
    opRevolve(context, id + "revolve1", {
        "entities" : qSketchRegion(id + "sketch1"),
        "axis" : line(vector(0, 0, 0) * millimeter, vector(0, 0, 1)),
        "angleForward" : 360 * degree
    });

    // Remove sketch entities no longer required
    opDeleteBodies(context, id + "delete1", {"entities" : qCreatedBy(id + "sketch1")});

    // teeths generation
    const plane2 = plane(vector(0, 0, 0) * millimeter, vector(0, 0, 1), vector(1, 0, 0));
    const sketch2 = newSketchOnPlane(context, id + "sketch2", {"sketchPlane": plane2});

    // outer teeth profile
    skPolyline(sketch2, "polyline2", {
        points: gearTooth2D(r / cos(value.delta), definition.m, definition.alpha),
    });

    skSolve(sketch2);
    
    const plane3 = plane(vector(0 * millimeter, 0 * millimeter, definition.e), vector(0, 0, 1), vector(1, 0, 0));
    const sketch3 = newSketchOnPlane(context, id + "sketch3", {"sketchPlane": plane3});

    // inner teeth profile
    skPolyline(sketch3, "polyline3", {
        points: gearTooth2D(value.scale * r / cos(value.delta), value.scale * definition.m, definition.alpha),
    });

    skSolve(sketch3);

    // generate tooth body
    opLoft(context, id + "loft1", {
        "profileSubqueries": [
            qCreatedBy(id + "sketch2", EntityType.FACE),
            qCreatedBy(id + "sketch3", EntityType.FACE),
        ],
    });

    // Remove sketch entities no longer required
    opDeleteBodies(context, id + "delete2", {"entities" : qCreatedBy(id + "sketch2")});
    opDeleteBodies(context, id + "delete3", {"entities" : qCreatedBy(id + "sketch3")});

    // move tooth back in place
    const matrix1 = rotationMatrix3d(vector(1, 0, 0), value.delta);
    const transform1 = transform(matrix1, vector(0, 0, 0) * millimeter);
    const transform2 = transform(vector(0 * millimeter, r, dedendum * sin(value.delta)));
    opTransform(context, id + "transform1", {
            "bodies" : qCreatedBy(id + "loft1", EntityType.BODY),
            "transform": transform2 * transform1
    });

    // copy teeth all around
    var transforms = [];
    var names = [];
    for (var i = 1; i &lt; value.Z; i += 1) {
        const matrix = rotationMatrix3d(vector(0, 0, 1), i * 360 / value.Z * degree);
        transforms = append(transforms, transform(matrix, vector(0, 0, 0) * millimeter));
        names = append(names, toString(i));
    }
    opPattern(context, id + "pattern1", {
        "entities": qCreatedBy(id + "loft1", EntityType.BODY),
        "transforms": transforms,
        "instanceNames": names
    });

    // merge all parts
    opBoolean(context, id + "boolean1", {
        "tools" : qCreatedBy(id, EntityType.BODY),
        "operationType" : BooleanOperationType.UNION
    });

    // move gear in place
    const matrix2 = rotationMatrix3d(vector(0, 0, 1), value.turn * 360 / value.Z / 2 * degree);
    const transform3 = transform(matrix2, vector(0, 0, 0) * millimeter);
    const transform4 = transform(vector(0 * millimeter, 0 * millimeter, -value.shift2));
    const matrix3 = rotationMatrix3d(vector(1, 0, 0), value.rot);
    const transform5 = transform(matrix3, vector(0, 0, 0) * millimeter);
    const transform6 = transform(vector(0 * millimeter, 0 * millimeter, value.shift1));
    opTransform(context, id + "transform2", {
        "bodies" : qCreatedBy(id, EntityType.BODY),
        "transform": transform6 * transform5 * transform4 * transform3
    });
}


function gearTooth2D(r is ValueWithUnits, m is number, alpha is ValueWithUnits)
{
    // convert polar to cartesian coordinates
    var polar = function(r, theta) { return r * vector(sin(theta), cos(theta)); };

    // unwind a string this many degrees to go from radius r1 to radius r2
    var iang = function(r1, r2) { return sqrt((r2 / r1) ^ 2 - 1) / PI * 180 * degree - acos(r1 / r2); };

    // point at radius d on the involute curve
    var q6 = function(b, s, t, d) { return polar(d, s * (iang(b, d) + t)); };

    // radius a fraction f up the curved side of the tooth
    var q7 = function(f, r, b, r2, t, s) { return q6(b, s, t, (1 - f) * max(b, r) + f * r2); };

    const Z = 2 * r / (m * millimeter);                      // number of teeth
    const ra = r + 1 * m * millimeter;                       // radius of outer circle (tête)
    const rb = r * cos(alpha);                               // radius of base circle (base de la dent)
    const rf = r - 1.25 * m * millimeter;                    // radius of root circle (pied)
    const w = m * PI / 2 * millimeter;                       // tooth width at pitch circle
    const k = -iang(rb, r) - w / 2 / r / PI * 180 * degree;  // angle to where involute meets base circle on each side of tooth

    const offset = vector(0 * millimeter, -r);               // bring back tooth at origin

    var points;
    if (rf &lt; rb) {
        points = [
            polar(rf, k) + offset,
            q7(0/5, rf, rb, ra, k,  1) + offset, q7(1/5, rf, rb, ra, k,  1) + offset, q7(2/5, rf, rb, ra, k,  1) + offset,
            q7(3/5, rf, rb, ra, k,  1) + offset, q7(4/5, rf, rb, ra, k,  1) + offset, q7(5/5, rf, rb, ra, k,  1) + offset,
            q7(5/5, rf, rb, ra, k, -1) + offset, q7(4/5, rf, rb, ra, k, -1) + offset, q7(3/5, rf, rb, ra, k, -1) + offset,
            q7(2/5, rf, rb, ra, k, -1) + offset, q7(1/5, rf, rb, ra, k, -1) + offset, q7(0/5, rf, rb, ra, k, -1) + offset,
            polar(rf, -k) + offset,
            polar(rf, k) + offset  // close profile
        ];
    }
    else {
        points = [
            q7(0/5, rf, rb, ra, k,  1) + offset, q7(1/5, rf, rb, ra, k,  1) + offset, q7(2/5, rf, rb, ra, k,  1) + offset,
            q7(3/5, rf, rb, ra, k,  1) + offset, q7(4/5, rf, rb, ra, k,  1) + offset, q7(5/5, rf, rb, ra, k,  1) + offset,
            q7(5/5, rf, rb, ra, k, -1) + offset, q7(4/5, rf, rb, ra, k, -1) + offset, q7(3/5, rf, rb, ra, k, -1) + offset,
            q7(2/5, rf, rb, ra, k, -1) + offset, q7(1/5, rf, rb, ra, k, -1) + offset, q7(0/5, rf, rb, ra, k, -1) + offset,
            q7(0/5, rf, rb, ra, k,  1) + offset  // close profile
        ];
    }

    return points;
}


const TEETH_BOUNDS = {
    (unitless) : [4, 25, 250]
} as IntegerBoundSpec;


const SHAFT_ANGLE_BOUNDS = {
    (degree) : [5, 90, 175]
} as AngleBoundSpec;


const MODULE_BOUNDS = {
    (unitless) : [0.1, 1, 10]
} as RealBoundSpec;


const TEETH_WIDTH_BOUNDS = {
    (millimeter) : [0.1, 5, 100],
    (centimeter) : 0.5,
    (meter) : 0.005,
    (inch) : 0.2
} as LengthBoundSpec;


const H1_BOUNDS = {
    (millimeter) : [0.1, 1, 50],
    (centimeter) : 0.1,
    (meter) : 0.001,
    (inch) : 0.0375
} as LengthBoundSpec;


const H2_BOUNDS = {
    (millimeter) : [0.1, 0.5, 50],
    (centimeter) : 0.05,
    (meter) : 0.0005,
    (inch) : 0.0175
} as LengthBoundSpec;


const PRESSURE_ANGLE_BOUNDS = {
    (degree) : [14.999, 20, 25]
} as AngleBoundSpec;
</pre>
<h4>Bevel Gear2 (<a href="https://www.cctech.co.in/assets/files/blog/exploring-onshape-featurescript/Onshape-FeatureScript-for-Bevel-Gear.txt">source</a>, <a href="https://www.cctech.co.in/blog/exploring-onshape-featurescript">page</a>):</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">FeatureScript 961;
import(path : "onshape/std/geometry.fs", version : "961.0");

annotation { "Feature Type Name" : "Bevel Gear" }
export const myFeature = defineFeature(function(context is Context, id is Id, definition is map)
precondition
{
	// Define the parameters of the feature type

	annotation { "Name" : "Module" }
	isInteger(definition.module, POSITIVE_COUNT_BOUNDS);  
	
	annotation { "Name" : "Pressure Angle Input type" }
	definition.PressAngInputType is PressureAngleType;
	
	if(definition.PressAngInputType == PressureAngleType.standardPressAngle)
	{
		annotation { "Name" : "Pressure Angle (degrees)" }
		definition.stdPressAngle is stdPressAngles;
	}
	else
	{
		annotation { "Name" : "Custom Pressure Angle (degrees)"  }
		isAngle(definition.pressureAngle, ANGLE_360_BOUNDS); 
	}
	
	annotation { "Name" : "Number of Teeths in Gear" }
	isInteger(definition.gearTeeths, POSITIVE_COUNT_BOUNDS);
	
	annotation { "Name" : "Face Width" }
	isLength(definition.faceWidth, LENGTH_BOUNDS);        
	
	annotation { "Name" : "Root Fillet Radius" }
	isLength(definition.RootFilletRadius, LENGTH_BOUNDS);
	
	annotation { "Name" : "Gear Ratio" }
	isInteger(definition.gearRatio, POSITIVE_COUNT_BOUNDS);
	
	annotation { "Name" : "Hole Diameter" }
	isLength(definition.HoleDia, LENGTH_BOUNDS);   
	
	//End of Parameter def
}
{
	// Define the function's action
	//Calculations for gear nomenclatures

	var diameteralPitch = (25.4 / definition.module);        
	var gearPitchDia = (definition.gearTeeths / diameteralPitch) * meter;
	definition.pinionTeeths = round(definition.gearTeeths / definition.gearRatio);
	var pinionPitchDia = (definition.pinionTeeths / diameteralPitch) * meter;
	var theta = atan(gearPitchDia / pinionPitchDia);

	theta = ((theta * 180 / PI) / radian);
	var zOffset = (definition.faceWidth * cos((theta / 2) * degree));

	if(zOffset &gt; ((pinionPitchDia / 2) * 0.9))
	{
		throw regenError("Component failed to create - Face Width greater than cone distance");
	}
	
	if(zOffset &lt; ((pinionPitchDia / 2) * 0.2))
	{
		throw regenError("Component failed to create - Face Width less than minimum required value.");
	}
	
	var pitchDiameter = gearPitchDia + definition.faceWidth * sin(theta * 0.5 * degree);
	var planeOffset = 0 * meter;        
	// Recalculate diametral Pitch
	diameteralPitch = definition.gearTeeths / pitchDiameter * meter;
	
	var dedendum =  0;        
	dedendum = calculateDedendum(context, diameteralPitch) * meter;
	
	var rootDiameter = pitchDiameter - (2 * dedendum);

	var baseCircleDiameter = pitchDiameter * cos(definition.pressureAngle);

	var outsideDiameter = (definition.gearTeeths + 2) / diameteralPitch * meter;
	
	// Add base circle sketch;               
	var baseCircle1 = newSketch(context, id + "baseCircle1", {
			"sketchPlane" : qCreatedBy(makeId("Front"), EntityType.FACE)
	});
	
		skCircle(baseCircle1, "baseCircle1", {
			   "center" : vector(0, 0) * meter,
			   "radius" : 1 * (baseCircleDiameter / 2)
		});
	
	skSolve(baseCircle1);

	// End of base circle sketch
	
	// Calculate and define nomenclatures for offset Plane for Loft operation
	var pitchDiameter2 = gearPitchDia - (definition.faceWidth * sin(theta * degree) / 2);
	
	var diameteralPitch2 = definition.gearTeeths / pitchDiameter2 * meter;

	var dedendum2 = 0;
	dedendum2 = calculateDedendum(context, diameteralPitch2) * meter;
	if (dedendum2 == 0)
		throw regenError("failed to calculate value of dedndum");
	
	planeOffset = zOffset;
	
	//Creating Offset Plane
	opPlane(context, id + "plane1", {
			"plane" : plane(vector(0, (-1) *  zOffset / meter, 0) * meter, vector(0, -1, 0 )),
			"width" : 6 * inch,
			"height" : 6 * inch
	});
	
	var rootDiameter2 = pitchDiameter2 - (2 * dedendum2);

	var baseCircleDiameter2 = pitchDiameter2 * cos(definition.pressureAngle);

	var outsideDiameter2 = (definition.gearTeeths + 2) / diameteralPitch2 * meter;
	
	// Add base circle 2 sketch
	var baseCircle2 = newSketch(context, id + "baseCircle2", {
			"sketchPlane" : qCreatedBy((id + "plane1"), EntityType.FACE)
	});
	
	skCircle(baseCircle2, "baseCircle2", {
			"center" : vector(0, 0) * meter,
			"radius" : 1 * (baseCircleDiameter2 / 2)
	});  
		
	skSolve(baseCircle2);
	// End of base circle sketch
   
	// Create sketch entity for shaft.
	var shaftCircle = newSketch(context, id + "shaftCircle", {
			"sketchPlane" : qCreatedBy(makeId("Front"), EntityType.FACE)
	});

	skCircle(shaftCircle, "shaftCircle", {
			"center" : vector(0, 0) * meter,
			"radius" : 1 * (definition.HoleDia / 2)
	});
	
	skSolve(shaftCircle);
	// ### Executing Loft Operation ############################################################       
	opLoft(context, id + "loft1", {
			"profileSubqueries" : [ qCreatedBy(id + "baseCircle1", EntityType.FACE), qCreatedBy(id + "baseCircle2", EntityType.FACE) ],
	});
	// Begining Calculations for Involute points for gear teeth sketch.        
	var involutePoints1 = [];
	var involutePoints2 = [];
	var tempInvoluteSet = [];        

	var toothThicknessAngle = ((2 * PI) / (2 * definition.gearTeeths)) * 180 / PI;       
	var involutePointCount = 15;    
	var involuteIntersectionRadius = baseCircleDiameter / 2;
	var involuteSize = (outsideDiameter / 2) - (baseCircleDiameter / 2);
  
	planeOffset = 0 * meter;

	for (var t = 0; t &lt; involutePointCount; t += 1)
	{    
		involuteIntersectionRadius = (baseCircleDiameter / 2.0) + ((involuteSize / (involutePointCount - 1)) * t);
		var newPt = involutePoint(context, baseCircleDiameter / 2, involuteIntersectionRadius, planeOffset);
		tempInvoluteSet = append(tempInvoluteSet, newPt);
	}
	// Determine the angle between the X axis and a line between the origin of the curve and the intersection point between the involute and the pitch diameter circle.

	var pitchInvolutePt = involutePoint(context, baseCircleDiameter / 2, pitchDiameter / 2, planeOffset);
		
	var pitchPointAngle = atan(pitchInvolutePt[1] / pitchInvolutePt[0]) * 180 /(PI * radian);

	// Determine the angle defined by the tooth thickness as measured at the pitch diameter circle.

	//Angle to rotate the curve
	var rotateAngle = (-1) * (toothThicknessAngle / 2 + pitchPointAngle);
	// Rotate the involute so the intersection point lies on the x axis.
	var cosAngle = cos(rotateAngle * degree);
	var sinAngle = sin(rotateAngle * degree);

	for (var pt in tempInvoluteSet)
	{
		pt[0] = pt[0] * cosAngle - pt[1] * sinAngle;
		pt[1] = pt[0] * sinAngle + pt[1] * cosAngle;
		involutePoints1 = append(involutePoints1, vector( pt[0], pt[1] ) * meter);
		// Create a new set of points with a negated y.  This effectively mirrors the original points about the X axis. 
		var negatedPt = vector(pt[0], (-1) * pt[1] );
		involutePoints2 = append(involutePoints2, negatedPt * meter);
	}

	// Create sketch for Teeth Profile
	var Involute1 = newSketch(context, id + "Involute1", {
			"sketchPlane" : qCreatedBy(makeId("Front"), EntityType.FACE)
	});

	skFitSpline(Involute1, "spline1", {
			"points" : involutePoints1
	});
	
	skFitSpline(Involute1, "spline2", {
			"points" : involutePoints2
	});
	
	skArc(Involute1, "gearTop", {
			"start" : 1 * involutePoints1[involutePointCount - 1] ,
			"mid" : 1 * vector(outsideDiameter / 2, 0 * meter ),
			"end" : 1 * involutePoints2[involutePointCount - 1]
	});
			
   skArc(Involute1, "gearBase", {
			"start" : 1 * involutePoints1[0] ,
			"mid" : 1 * vector(baseCircleDiameter / 2, 0 * meter ),
			"end" : 1 * involutePoints2[0]
	});

	skSolve(Involute1);
	//##### Begining Calculations for Involute points for gear teeth sketch on offset Plane for loft operation. 
	var tempInvoluteSet2 = [];
	var involutePts1 = [];
	var involutePts2 = [];
	
	involuteIntersectionRadius = baseCircleDiameter2 / 2;
	involuteSize = (outsideDiameter2 / 2) - (baseCircleDiameter2 / 2);        
	planeOffset = zOffset;       

	for (var t = 0; t &lt; involutePointCount; t += 1)
	{    
		involuteIntersectionRadius = (baseCircleDiameter2 / 2.0) + ((involuteSize / (involutePointCount - 1)) * t);
		var newPt = involutePoint(context, baseCircleDiameter2 / 2, involuteIntersectionRadius, planeOffset);
		tempInvoluteSet2 = append(tempInvoluteSet2, newPt);
	}
	// Determine the angle between the X axis and a line between the origin of the curve and the intersection point between the involute and the pitch diameter circle.

	pitchInvolutePt = involutePoint(context, baseCircleDiameter2 / 2, pitchDiameter2 / 2, planeOffset);
	debug(context, pitchInvolutePt);
	pitchPointAngle = atan(pitchInvolutePt[1] / pitchInvolutePt[0]) * 180 /(PI * radian);

	// Determine the angle defined by the tooth thickness as measured at the pitch diameter circle.

	//Angle to rotate the curve
	rotateAngle = (-1) * (toothThicknessAngle / 2 + pitchPointAngle);//-backlashAngle
	// Rotate the involute so the intersection point lies on the x axis.
	cosAngle = cos(rotateAngle * degree);
	sinAngle = sin(rotateAngle * degree);

	for (var pt in tempInvoluteSet2)
	{
		pt[0] = pt[0] * cosAngle - pt[1] * sinAngle;
		pt[1] = pt[0] * sinAngle + pt[1] * cosAngle;
		involutePts1 = append(involutePts1, vector( pt[0], pt[1] ) * meter);
	// Create a new set of points with a negated y.  This effectively mirrors the original points about the X axis. 
		var negatedPt = vector(pt[0], (-1) * pt[1] );
		involutePts2 = append(involutePts2, negatedPt * meter);
	}
	// Create sketch for Teeth Profile for offset plane
	var Involute2 = newSketch(context, id + "Involute2", {
		"sketchPlane" : qCreatedBy((id + "plane1"), EntityType.FACE)
	});

	skFitSpline(Involute2, "spline1", {
			"points" : involutePts1
	});
	
	skFitSpline(Involute2, "spline2", {
			"points" : involutePts2
	});
	
	skArc(Involute2, "gearTop", {
			"start" : 1 * involutePts1[involutePointCount - 1] ,
			"mid" : 1 * vector(outsideDiameter2 / 2, 0 * meter ),
			"end" : 1 * involutePts2[involutePointCount - 1]
	});
			
	skArc(Involute2, "gearBase", {
			"start" : 1 * involutePts1[0] ,
			"mid" : 1 * vector(baseCircleDiameter2 / 2, 0 * meter ),
			"end" : 1 * involutePts2[0]
	});

	skSolve(Involute2);

	// Loft Operation for Teeth Profile
	opLoft(context, id + "loft2", {
			"profileSubqueries" : [ qCreatedBy(id + "Involute1", EntityType.FACE), qCreatedBy(id + "Involute2", EntityType.FACE) ],
	});
	
	opFitSpline(context, id + "Axis", {
			"points" : [vector( 0,  0,  0) * inch, vector(0,  -1, 0) * inch] });
	const axis = qCreatedBy(id + "Axis", EntityType.EDGE);

	// Circular patteren operation for creating all the terth profile bodies around base.
	circularPattern(context, id + "gearTeeths", {
			"patternType" : PatternType.PART,
			"entities" : qCreatedBy(id + "loft2", EntityType.BODY),
			"axis" : axis,
			"angle" : 360 * degree,
			"instanceCount" : definition.gearTeeths,
			"equalSpace" : true
	});
	
});

//Function to calculate dedendum value.
export function calculateDedendum(context, diametralPitch)returns number
{
	if(diametralPitch  &lt; ((20 * (PI / 180)) - 0.000001))
	{
		return (1.157 / diametralPitch);
	}
	else
	{
		var circularPitch = PI / diametralPitch;
		if(circularPitch &gt;= 20)
		{
			return (1.25 / diametralPitch);
		}
		else
		{
			return (1.2 / diametralPitch);
		}
	}
}

const PRESSURE_ANGLE_BOUNDS =
{
	(degree) : [14.5, 20, 25]
} as AngleBoundSpec;

export enum stdPressAngles
{
	annotation { "NAME" : "14.5 degree" }
	PressAngle_14_5 ,
	annotation { "NAME" : "20 degree" }
	PressAngle_20,
	annotation { "NAME" : "25 degree" }
	PressAngle_25
}

export enum PressureAngleType
{
	annotation { "Name" : "Standard Pressure Angle(Recomended)" }
	standardPressAngle,
	annotation { "Name" : "Custom Pressure Angle" }
	customPressAngle
}

// Function to calculate Involute Point coordinates / vectors
export function involutePoint(context, baseCircleRadius, involuteIntersectionRadius, planeOffset)returns Vector
{
	var l = sqrt(involuteIntersectionRadius ^ 2 - baseCircleRadius ^ 2 );

	var alpha = (l / baseCircleRadius);
	alpha = alpha * 180 / PI;

	var thta = alpha - (180 / PI) * (acos(baseCircleRadius / involuteIntersectionRadius)) / radian;

	var x = involuteIntersectionRadius * cos(thta * degree) / meter;
	var y = involuteIntersectionRadius * sin(thta * degree) / meter;

	return vector(x,y);
}</pre>
<h3>Control</h3>
<h4>Modeling and Control systems design</h4>
<h4>Modeling:</h4>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-84882-882-7">Bond Graph Methodology</a> (校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="/downloads/2020_FoundationsOfMulti-ParadigmMod.pdf">2020_Foundations Of Multi-Paradigm Modelling for Cyber-Physical systems.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/BondGraphTools">https://github.com/mdecourse/BondGraphTools</a></p>
<h4>Automatic Control:</h4>
<p style="padding-left: 30px;"><a href="http://controlbook.byu.edu/lib/exe/fetch.php?media=controlbook.pdf">Introduction to Feedback control.pdf</a> (<a href="http://controlbook.byu.edu/doku.php">source</a>, <a href="http://controlbook.byu.edu/lib/exe/fetch.php?media=hummingbird_manual.pdf">lab</a>)</p>
<p style="padding-left: 30px;"><a href="/downloads/2010_GRADIENT-BASED REINFORCEMENT LEARNING TECHNIQUES FOR UNDERWATER ROBOTICS BEHAVIOR LEARNING.pdf">2010_GRADIENT-BASED REINFORCEMENT LEARNING TECHNIQUES FOR UNDERWATER ROBOTICS BEHAVIOR LEARNING.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2015_Backstepping Controllers for a Cart-Pole System in Two Configurations.pdf">2015_Backstepping Controllers for a Cart-Pole System in Two Configurations.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://towardsdatascience.com/comparing-optimal-control-and-reinforcement-learning-using-the-cart-pole-swing-up-openai-gym-772636bc48f4">https://towardsdatascience.com/comparing-optimal-control-and-reinforcement-learning-using-the-cart-pole-swing-up-openai-gym-772636bc48f4</a></p>
<p style="padding-left: 30px;">2016_MODELING, SIMULATION AND REAL-TIME CONTROL OF UNDERACTUATED SYSTEMS- A CART-PENDULUM EXAMPLE.pdf</p>
<p style="padding-left: 30px;"><a href="/downloads/2021_irtual Reinforcement Learning for Balancing an Inverted Pendulum in Real Time.pdf">2021_irtual Reinforcement Learning for Balancing an Inverted Pendulum in Real Time.pdf</a></p><h3>AI and CAD</h3>
<h4>Reinforcement Learning (強化學習):</h4>
<p style="padding-left: 30px;"><a href="https://www.davidsilver.uk/teaching/">https://www.davidsilver.uk/teaching/</a></p>
<p style="padding-left: 30px;"><a href="https://neptune.ai/blog/reinforcement-learning-applications">https://neptune.ai/blog/reinforcement-learning-applications</a></p>
<h4 style="padding-left: 60px;">強化學習的實務應用:</h4>
<p style="padding-left: 90px;">自駕車, <span style="background-color: #ffff99;">工業自動化</span> (高效節能), 金融貿易 (前景預測), 自然語言處理 (翻譯, 會議摘要, 自動答詢), 醫療保健 (自動診斷), <span style="background-color: #ffff99;">工程應用</span> (最佳化設計與製造), <span style="background-color: #ffff99;">機電設備自動控制</span>.</p>
<p style="padding-left: 30px;"><a href="https://wiki.pathmind.com/deep-reinforcement-learning">https://wiki.pathmind.com/deep-reinforcement-learning</a></p>
<h4 style="padding-left: 60px;">深度強化學習應用領域:</h4>
<p style="padding-left: 90px;"><span style="background-color: #ffff99;">Robotics</span>, Industrial Operations, Supply Chain &amp; Logistics, Traffic Control, Bidding &amp; Advertising, Recommender Systems, Load Balancing, Augmented NLP.</p>
<p style="padding-left: 30px;"><a href="https://www.amazon.science/latest-news/3-ways-reinforcement-learning-is-changing-the-world-around-you">https://www.amazon.science/latest-news/3-ways-reinforcement-learning-is-changing-the-world-around-you</a></p>
<h4 style="padding-left: 60px;">強化學習帶來的三大變革:</h4>
<p style="padding-left: 90px;">新聞推介系統, 高效能源配置, <span style="background-color: #ffff99;">機器人領域</span>.</p>
<p style="padding-left: 30px;"><a href="/downloads/Optimize Robots Physical Design byParameterization in Deep Reinforcement Learning.pdf">Optimize Robots Physical Design byParameterization in Deep Reinforcement Learning.pdf</a></p>
<p style="padding-left: 60px;">When designing robots, it is a common practice to <span style="background-color: #ccffcc;">decide some mechanical pa-</span><br/><span style="background-color: #ccffcc;">rameters prior to carrying out any detailed design</span>. However, it is often difficult to<br/>find the optimal values for those parameters. In most of reinforcement learning<br/>tasks, the agent is learning a control policy in a fixed environment. This project<br/>aims to enable the agent to modify some environment parameters related to its<br/>physical configuration, i.e. <span style="background-color: #ccffcc;">the agent is able to evolve to a better version that is</span><br/><span style="background-color: #ccffcc;">more suitable for a certain task</span>. We proposed methods to argument the reward<br/>function to influence the direction of evolution according to our preference. We<br/>discovered how the joint learning of policy and optimal physical configuration will<br/>impact the learning efficiency. We also found some interesting relationship between<br/>the learning of control policy and the evolution of the physical configuration.</p>
<h4>Q Learning:</h4>
<p style="padding-left: 30px;"><a href="https://cedar.buffalo.edu/~srihari/CSE574/Chap15/15.3-Q-Learning.pdf">https://cedar.buffalo.edu/~srihari/CSE574/Chap15/15.3-Q-Learning.pdf</a> </p>
<p style="padding-left: 30px;"><a href="https://medium.com/pyladies-taiwan/reinforcement-learning-%E9%80%B2%E9%9A%8E%E7%AF%87-deep-q-learning-26b10935a745">https://medium.com/pyladies-taiwan/reinforcement-learning-%E9%80%B2%E9%9A%8E%E7%AF%87-deep-q-learning-26b10935a745</a></p>
<h4>Artificial Intelligence:</h4>
<p style="padding-left: 30px;"><a href="https://www.goodfirms.co/blog/importance-artificial-intelligence-computer-aided-design">https://www.goodfirms.co/blog/importance-artificial-intelligence-computer-aided-design</a></p>
<h4 style="padding-left: 60px;">AI 在電腦輔助設計領域的重要性:</h4>
<p style="padding-left: 90px;">Traditional CAD software solutions are <span style="background-color: #ccffcc;">parametric</span>, which <span style="background-color: #ccffcc;">demands extensive planning</span>. This process is time-consuming as a single property can change the whole design, and eventually, it can slow down the work-flow.<br/><br/>CAD today covers several engineering functions ranging from simple drawings to 3D models. With the incorporation of AI, the process of designing becomes a bit easier with AI taking the lead to <span style="background-color: #ccffcc;">integrate the manufacturing aspects or the engineering aspects</span>, <span style="background-color: #ccffcc;">predict and perform the tasks with its own intelligence</span>. This suits all types of design, whether it is a new design, or an innovative design, or a routine design.</p>
<p style="padding-left: 90px;">AI is capable of storing knowledge, and this knowledge-based information, when incorporated with CAD/CAM procedure, <span style="background-color: #ccffcc;">automates several functions</span>.<br/><br/>The AI algorithm can itself <span style="background-color: #ccffcc;">make the required changes in the design</span> without the intervention of the humans.<br/><br/>The testing and simulations process can be completed with the help AI, which majorly <span style="background-color: #ccffcc;">cuts down the design time</span>.<br/><br/>The implementation of CAD with AI technology is capable of <span style="background-color: #ccffcc;">delivering ergonomic engineering</span>.</p>
<p style="padding-left: 30px;"><a href="https://www.digitalengineering247.com/article/deep-learning-meets-3d-modeling/engineering-resource-center">https://www.digitalengineering247.com/article/deep-learning-meets-3d-modeling/engineering-resource-center</a></p>
<p style="padding-left: 60px;">The application of machine learning, also known as deep learning, to computer-aided design (CAD) is gradually becoming commonplace.  Almost all mainstream CAD programs—Autodesk Fusion and SOLIDWORKS, to name but two—include some form of generative design (衍生式設計) or topology optimization (拓撲最佳化) tools. This allows the software to employ AI-like algorithms to <span style="background-color: #ccffcc;">identify the best shapes</span> for the designer’s stated purpose, whether to <span style="background-color: #ccffcc;">reduce weight</span> or to <span style="background-color: #ccffcc;">counterbalance the anticipated stress</span> (usually it’s a combination of both). 即達成少負擔 (less burden), 多建樹 (more achievements) 的設計目標.</p>
<p><a href="https://www.autodesk.com/autodesk-university/content/future-design-powered-ai-mike-haley-2019">https://www.autodesk.com/autodesk-university/content/future-design-powered-ai-mike-haley-2019</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NSJwq9CVoIk" title="YouTube video player" width="560"></iframe></p>
<h4>電腦輔助設計練習題:</h4>
<p style="padding-left: 30px;">在<a href="http://mde.tw/cp2021/content/Python.html">網際 Python 程式環境</a>中, 以下程式採用直覺邏輯執行<a href="https://zh.wikipedia.org/wiki/%E8%B4%AA%E9%A3%9F%E8%9B%87">貪食蛇遊戲</a>, 從已知經驗最高紀錄得分為 45 分, 請問: 可以採用人工執行或機器學習方法, 找出在此一遊戲環境中所能取得的最高極限得分嗎?</p>
<p style="padding-left: 30px;">可以結合 <a href="https://brython.info/">Brython</a> 當前端, 透過 AJAX 與後端 <a href="https://towardsdatascience.com/how-to-easily-deploy-machine-learning-models-using-flask-b95af8fe34d4">Flask</a> (<a href="https://www.lpalmieri.com/posts/2019-12-01-taking-ml-to-production-with-rust-a-25x-speedup/">Python</a>) + Rust 執行此一貪食蛇強化學習訓練嗎?</p>
<h4 style="padding-left: 30px;">參考資料:</h4>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/Snake-Reinforcement-Learning">https://github.com/mdecourse/Snake-Reinforcement-Learning</a></p>
<p style="padding-left: 90px;"><a href="https://www.programmersought.com/article/71723429072/">Q-Learning Algorithm</a> </p>
<p style="padding-left: 90px;"><a href="/downloads/Q-Learning/Path_finding_q_learning.py">Path_finding_q_learning.py</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf">Autonomous Agents in Snake Game via Deep Reinforcement Learning.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://courses.grainger.illinois.edu/cs440/fa2020/MPs/mp7/assignment7.html">https://courses.grainger.illinois.edu/cs440/fa2020/MPs/mp7/assignment7.html</a> </p>
<p style="padding-left: 60px;"><a href="/downloads/2016_Exploration%20of Reinforcement Learning to SNAKE.pdf">2016_<span dir="ltr" role="presentation">Exploration of Reinforcement Learning to SNAKE</span>.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Train a snake with reinforcement learning algorithms.pdf">Train a snake with reinforcement learning algorithms.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/python-engineer/snake-ai-pytorch">https://github.com/python-engineer/snake-ai-pytorch</a></p>
<p style="padding-left: 60px;"><a href="/downloads/deep Reinforcement Learning for Snake.pdf">Deep Reinforcement Learning for Snake.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/2019_Implementation of artificial intelligence in Snake game using genetic algorithm and neural networks.pdf">2019_Implementation of artificial intelligence in Snake game using genetic algorithm and neural networks.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/2020_Battlesnake Challenge- A Multi-agent Reinforcement Learning Playground with Human-in-the-loop.pdf">2020_Battlesnake Challenge- A Multi-agent Reinforcement Learning Playground with Human-in-the-loop.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://davideliu.com/2020/01/24/teaching-ai-to-play-snake-with-reinforcement-learning/">https://davideliu.com/2020/01/24/teaching-ai-to-play-snake-with-reinforcement-learning/</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/mdecourse/Snake-Battle-Royale">https://github.com/mdecourse/Snake-Battle-Royale</a></p>
<p style="padding-left: 60px;"><a href="https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36">https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36</a></p>
<p style="padding-left: 60px;"><a href="https://towardsdatascience.com/how-to-teach-an-ai-to-play-games-deep-reinforcement-learning-28f9b920440a">https://towardsdatascience.com/how-to-teach-an-ai-to-play-games-deep-reinforcement-learning-28f9b920440a</a></p>
<p style="padding-left: 60px;"><a href="https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/">https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/</a></p>
<p style="padding-left: 60px;"><a href="https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b">https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b</a></p>
<p style="padding-left: 60px;"><a href="https://www.youtube.com/watch?v=PJl4iabBEz0">https://www.youtube.com/watch?v=PJl4iabBEz0</a> (part1)</p>
<p style="padding-left: 60px;"><a href="https://www.youtube.com/watch?v=5Vy5Dxu7vDs">https://www.youtube.com/watch?v=5Vy5Dxu7vDs</a> (part2)</p>
<p style="padding-left: 60px;"><a href="https://www.youtube.com/watch?v=6pJBPPrDO40">https://www.youtube.com/watch?v=6pJBPPrDO40</a> (part3)</p>
<p style="padding-left: 60px;"><a href="https://www.youtube.com/watch?v=VGkcmBaeAGM">https://www.youtube.com/watch?v=VGkcmBaeAGM</a> (part4)</p>
<p style="padding-left: 60px;"><a href="https://www.youtube.com/watch?v=yp826Ybh4rU">https://www.youtube.com/watch?v=yp826Ybh4rU</a></p>
<h4 style="padding-left: 60px;">In Rust:</h4>
<p style="padding-left: 90px;"><a href="https://github.com/SLMT/rust-snake">https://github.com/SLMT/rust-snake</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/prajwaldp/rust-snake-game">https://github.com/prajwaldp/rust-snake-game</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/RodionChachura/rust-js-snake-game">https://github.com/RodionChachura/rust-js-snake-game</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/leocavalcante/rust-snake">https://github.com/leocavalcante/rust-snake</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/tensor-programming/snake-tutorial">https://github.com/tensor-programming/snake-tutorial</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/AlexRiosJ/rust_snake">https://github.com/AlexRiosJ/rust_snake</a></p>
<p><img caption="false" height="438" src="/images/brython_snake_eater_high_score_45.png" width="400"/></p>
<h4><a href="https://brython.info/">Brython</a> snake eater game:</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從 browser 導入 document 並設為 doc
from browser import document as doc
# 使用者可以透過 window 當作介面使用其他 Javascript 功能
from browser import html, window
# 用於定時執行特定函式
import browser.timer
# 導入數學模組
import math
# 導入亂數模組
from random import random, randint
 
def update_score(new_score):
    global high_score
    score_doc.innerHTML = "Score: " + str(new_score)
    if new_score &gt; high_score:
        high_score_doc.innerHTML = "High Score: " + str(new_score)
        high_score = new_score
        
def eat(px, py, ax, ay):
    global xv, yv, pre_pause, paused
    # (px, py) go to (ax, ay) through incremented xv, yv
    if ax != px or ay != py:
        if ax &gt; px and not paused:
            xv = 1
            yv = 0
        if ax &lt; px and not paused:
            xv = -1
            yv = 0
        if ay &gt; py and not paused:
            xv = 0
            yv = 1
        if ay &lt; py and not paused:
            xv = 0
            yv = -1

def game():
    global px, py, tc, gs, ax, ay, trail, tail, score
    # px 為 snake 第一個點的 x 座標, 增量值為 xv
    px += xv
    py += yv
    # 允許穿越四面牆, 以 tc 表示牆面座標極限
    # 若 px 為負值則設定為 tc -1, 表示 tc 為 x 方向 limit
    # x 座標方向的穿牆設定
    if px &lt; 0:
        px = tc-1
    if px &gt; tc-1:
        px = 0
    # y 座標方向的穿牆設定
    if py &lt; 0:
        py = tc-1
    if py &gt; tc-1:
        py = 0
    ctx.fillStyle = "black"
    # 畫布填入黑色
    ctx.fillRect(0, 0, canvas.width, canvas.height)
    # snake 為 lime 色
    ctx.fillStyle = "lime"
    # trail 為數列, 代表 snake 各節 [x,y] 座標
    # trail = [[x0,y0], [x1, y1], [x2, y2]...]
    # gs 為方塊邊長 pixel 數
    for i in range(len(trail)):
        # https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes
        # fillRect(x, y, width, height)
        ctx.fillRect(trail[i][0]*gs, trail[i][1]*gs, gs-2, gs-2)
        # 若 snake 第一節座標 (px, py)  穿過身體任一節, 則 score 歸零
        if trail[i][0] == px and trail[i][1] == py:
            score = score if paused else 0
            # snake reset 為五節
            tail = 5
    # trail 數列以碰到的 [px, py] 座標數列插入作為第一節
    trail.insert(0, [px, py])
    while len(trail) &gt; tail:
        # pop() 內建移除數列最後一個 element
        trail.pop()
    # ax, ay 為紅點座標
    # 當 snake 第一節座標[px, py] 與紅色食物座標 [ax, ay] 重合
    # 則 tail 增量, 即多一節且得分加 1, 然後食物座標 [ax, ay] 重新以亂數定位
    if ax == px and ay == py:
        tail += 1
        ax = math.floor(random()*tc)
        ay = math.floor(random()*tc)
        score += 1
    # [ax, ay] is known here
    # [px, py] is where the head of the snake
    # xv needed to be incremented from px to ax first
    # and yv needed to be incremented from py to ay
    eat(px, py, ax, ay)
    # 更新計分顯示
    update_score(score)
    ctx.fillStyle = "red"
    ctx.fillRect(ax*gs, ay*gs, gs-2, gs-2)
   
def key_push(evt):
    global xv, yv, pre_pause, paused
    key = evt.keyCode
    # 37 is left arrow key
    # 74 is j key
    if key == 74 and not paused:
        xv = -1
        yv = 0
    # 38 is up arrow key
    # 73 is i key
    elif key == 73 and not paused:
        xv = 0
        yv = -1
    # 39 is right arrow key
    # 76 is l key
    elif key == 76 and not paused:
        xv = 1
        yv = 0
    # 40 is down arrow key
    # 77 is m key
    elif key == 77 and not paused:
        xv = 0
        yv = 1
    # 32 is pause key
    # 80 is p key
    elif key == 80:
        temp = [xv, yv]
        xv = pre_pause[0]
        yv = pre_pause[1]
        pre_pause = [*temp]
        paused = not paused
   
def show_instructions(evt):
        window.alert("keys to control: i=up, m=down, j=left, l=right, p=pause")
       
# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 600, height = 600)
canvas.id = "game-board"
brython_div = doc["brython_div"]
brython_div &lt;= canvas
   
score_doc = html.DIV("score")
score_doc.id = "score"
brython_div &lt;= score_doc
   
high_score_doc = html.DIV("high-score")
high_score_doc.id = "high-score"
brython_div &lt;= high_score_doc
   
button = html.BUTTON("Keys to control")
button.id = "instructions-btn"
brython_div &lt;= button
   
score = 0
high_score = 0
   
px = py = 10
# gs*tc = canvas width and height
gs = 20
tc = 30
ax = ay = 15
xv = yv = 0
trail = []
tail = 5
   
pre_pause = [0,0]
paused = False
ctx = canvas.getContext("2d")
doc.addEventListener("keydown", key_push)
instructions_btn = doc["instructions-btn"]
instructions_btn.addEventListener("click", show_instructions)
browser.timer.set_interval(game, 1000/15)</pre>
<p></p>
<!-- 導入 brython -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/']});
}
</script>
<!-- brython webgl div -->
<div id="brython_div"></div>
<p></p>
<!-- 執行貪食蛇遊戲 -->
<script type="text/python3">
# 從 browser 導入 document 並設為 doc
from browser import document as doc
# 使用者可以透過 window 當作介面使用其他 Javascript 功能
from browser import html, window
# 用於定時執行特定函式
import browser.timer
# 導入數學模組
import math
# 導入亂數模組
from random import random, randint
 
def update_score(new_score):
    global high_score
    score_doc.innerHTML = "Score: " + str(new_score)
    if new_score > high_score:
        high_score_doc.innerHTML = "High Score: " + str(new_score)
        high_score = new_score
        
def eat(px, py, ax, ay):
    global xv, yv, pre_pause, paused
    # (px, py) go to (ax, ay) through incremented xv, yv
    if ax != px or ay != py:
        if ax > px and not paused:
            xv = 1
            yv = 0
        if ax < px and not paused:
            xv = -1
            yv = 0
        if ay > py and not paused:
            xv = 0
            yv = 1
        if ay < py and not paused:
            xv = 0
            yv = -1
            
def game():
    global px, py, tc, gs, ax, ay, trail, tail, score
    # px 為 snake 第一個點的 x 座標, 增量值為 xv
    px += xv
    py += yv
    # 允許穿越四面牆, 以 tc 表示牆面座標極限
    # 若 px 為負值則設定為 tc -1, 表示 tc 為 x 方向 limit
    # x 座標方向的穿牆設定
    if px < 0:
        px = tc-1
    if px > tc-1:
        px = 0
    # y 座標方向的穿牆設定
    if py < 0:
        py = tc-1
    if py > tc-1:
        py = 0
    ctx.fillStyle = "black"
    # 畫布填入黑色
    ctx.fillRect(0, 0, canvas.width, canvas.height)
    # snake 為 lime 色
    ctx.fillStyle = "lime"
    # trail 為數列, 代表 snake 各節 [x,y] 座標
    # trail = [[x0,y0], [x1, y1], [x2, y2]...]
    # gs 為方塊邊長 pixel 數
    for i in range(len(trail)):
        # https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes
        # fillRect(x, y, width, height)
        ctx.fillRect(trail[i][0]*gs, trail[i][1]*gs, gs-2, gs-2)
        # 若 snake 第一節座標 (px, py)  穿過身體任一節, 則 score 歸零
        if trail[i][0] == px and trail[i][1] == py:
            score = score if paused else 0
            # snake reset 為五節
            tail = 5
    # trail 數列以碰到的 [px, py] 座標數列插入作為第一節
    trail.insert(0, [px, py])
    while len(trail) > tail:
        # pop() 內建移除數列最後一個 element
        trail.pop()
    # ax, ay 為紅點座標
    # 當 snake 第一節座標[px, py] 與紅色食物座標 [ax, ay] 重合
    # 則 tail 增量, 即多一節且得分加 1, 然後食物座標 [ax, ay] 重新以亂數定位
    if ax == px and ay == py:
        tail += 1
        ax = math.floor(random()*tc)
        ay = math.floor(random()*tc)
        score += 1
    # [ax, ay] is known here
    # [px, py] is where the head of the snake
    # xv needed to be incremented from px to ax first
    # and yv needed to be incremented from py to ay
    eat(px, py, ax, ay)
    # 更新計分顯示
    update_score(score)
    ctx.fillStyle = "red"
    ctx.fillRect(ax*gs, ay*gs, gs-2, gs-2)
   
def key_push(evt):
    global xv, yv, pre_pause, paused
    key = evt.keyCode
    # 37 is left arrow key
    # 74 is j key
    if key == 74 and not paused:
        xv = -1
        yv = 0
    # 38 is up arrow key
    # 73 is i key
    elif key == 73 and not paused:
        xv = 0
        yv = -1
    # 39 is right arrow key
    # 76 is l key
    elif key == 76 and not paused:
        xv = 1
        yv = 0
    # 40 is down arrow key
    # 77 is m key
    elif key == 77 and not paused:
        xv = 0
        yv = 1
    # 32 is pause key
    # 80 is p key
    elif key == 80:
        temp = [xv, yv]
        xv = pre_pause[0]
        yv = pre_pause[1]
        pre_pause = [*temp]
        paused = not paused
   
def show_instructions(evt):
        window.alert("keys to control: i=up, m=down, j=left, l=right, p=pause")
       
# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 600, height = 600)
canvas.id = "game-board"
brython_div = doc["brython_div"]
brython_div <= canvas
   
score_doc = html.DIV("score")
score_doc.id = "score"
brython_div <= score_doc
   
high_score_doc = html.DIV("high-score")
high_score_doc.id = "high-score"
brython_div <= high_score_doc
   
button = html.BUTTON("Keys to control")
button.id = "instructions-btn"
brython_div <= button
   
score = 0
high_score = 0
   
px = py = 10
# gs*tc = canvas width and height
gs = 20
tc = 30
ax = ay = 15
xv = yv = 0
trail = []
tail = 5
   
pre_pause = [0,0]
paused = False
ctx = canvas.getContext("2d")
doc.addEventListener("keydown", key_push)
instructions_btn = doc["instructions-btn"]
instructions_btn.addEventListener("click", show_instructions)
browser.timer.set_interval(game, 1000/15)
</script><h2>SSO</h2>
<p><a href="https://en.wikipedia.org/wiki/Single_sign-on">https://en.wikipedia.org/wiki/Single_sign-on</a> </p>
<h4>Oauth2</h4>
<h4>本頁面相關內容的討論, 最終催生出:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/fossiloauth">https://github.com/mdecourse/fossiloauth</a></p>
<p>Flask 與 Fossil SCM  在同一台主機, 可以透過 Oauth2 登入後, 由 Python 程式導引 redirect 登入 Fossil SCM 主機. 其中可以讓 Python 讀取使用者在 Fossil SCM 倉儲中當下所設定的帳號密碼後登入.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
from flask import make_response, request, redirect
import requests

app = Flask(__name__)
app.config['SECRET_KEY'] = 'SUPER SECRET'

@app.route('/')
def hello_world():
    with requests.Session() as s:
        url = 'https://fossil.kmol.info/u/yen/login'
        post_var = {'u': 'username', 'p': 'password'}
        headers = {'X-Requested-With': 'XMLHttpRequest'}
        result = s.post(url, data = post_var, headers = headers)
        cookie = s.cookies.get_dict()
        key = list(cookie.keys())[0]
        value = cookie[key]
        '''
        print(key, value)
        resp = redirect(url)
        resp.set_cookie(key, value)
        return resp
        '''
        response = make_response(redirect(url))
        response.set_cookie(key, value)
        return response
        

if __name__ == '__main__':
    app.run()</pre>
<p>接下來的考量是, 能否不讓使用者直接從 Fossil SCM web 介面中登入?</p><h3>Fossil</h3>
<h4>結合 Fossil SCM 與 Flask Oauth2:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/fossiloauth">https://github.com/mdecourse/fossiloauth</a></p>
<h4>Cookie Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://www.valentinog.com/blog/cookies/">https://www.valentinog.com/blog/cookies/</a></p>
<p>採用 Flask Oauth2 介面登入後, 取得使用者 Gmail 帳號名稱 (具有唯一性) 後, 利用此一帳號查詢 Fossil SCM 中是否已經建立此一用戶,  若是, 則以亂數 (使用者無法得知, 因此無法直接從 Fossil SCM 倉儲網際介面中登入) 變更帳號對應密碼, 若尚無帳號, 則新建帳號並以亂數設定密碼. 使用者透過 Cookie 登入同硬體的 Fossil SCM 主機後, 程式必須自動替使用者登出 Flask 網際介面, 因此當使用者進入 Fossil SCM, 前面已經分別由程式登出 Gmail 與 Flask 網際帳號.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@app.route('/forum')
# at the end of forum must logout from 8443
@login_required
def forum():
    """Create forum routine"""
    username, userpass = repo()

    with requests.Session() as s:
        url = 'https://fossil.kmol.info/u/yen/login'
        post_var = {'u': username, 'p': userpass}
        headers = {'X-Requested-With': 'XMLHttpRequest'}
        result = s.post(url, data = post_var, headers = headers)
        cookie = s.cookies.get_dict()
        key = list(cookie.keys())[0]
        value = cookie[key]

        forum = "https://fossil.kmol.info/u/yen/forum"
        response = make_response(redirect(forum))
        response.set_cookie(key, value)
        # logout from 8443
        logout()
        return response</pre>
<h4>Rererences:</h4>
<p style="padding-left: 30px;"><a href="https://fossil-scm.org/forum/forumpost/59c6552555">https://fossil-scm.org/forum/forumpost/59c6552555</a> (Fossil SCM with json)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2019/downloads/Why%20Fossil-SCM%20is%20an%20excellent%20choice%20for%20introductory%20programming%20courses.pdf">Why Fossil-SCM is an excellent choice for introductory programming courses </a></p>
<p style="padding-left: 30px;"><a href="https://www.sqlite.org/index.html">https://www.sqlite.org/index.html</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@nerdijoe/how-to-deploy-flask-on-iis-with-windows-authentication-733839d657b7">https://medium.com/@nerdijoe/how-to-deploy-flask-on-iis-with-windows-authentication-733839d657b7</a></p>
<p style="padding-left: 30px;"><a href="https://atrium.ai/resources/how-to-implement-oauth-2-0-login-for-python-flask-web-server-applications/">https://atrium.ai/resources/how-to-implement-oauth-2-0-login-for-python-flask-web-server-applications/</a></p>
<h4>Fossil SCM:</h4>
<p><a href="https://fossil-scm.org/home/doc/trunk/www/json-api/api-auth.md">https://fossil-scm.org/home/doc/trunk/www/json-api/api-auth.md</a></p>
<p>Why using Fossil SCM: <a href="https://andreiclinciu.net/why-im-using-fossil-scm-instead-of-other-source-control-systems">https://andreiclinciu.net/why-im-using-fossil-scm-instead-of-other-source-control-systems</a></p>
<p>以 SQL 查詢資料庫中資料表欄位:</p>
<p style="padding-left: 30px;">fossil sql -R repo-name.fossil<br/>.schema user<br/>CREATE TABLE repository.user(<br/>  uid INTEGER PRIMARY KEY,<br/>  login TEXT UNIQUE,<br/>  pw TEXT,<br/>  cap TEXT,<br/>  cookie TEXT,<br/>  ipaddr TEXT,<br/>  cexpire DATETIME,<br/>  info TEXT,<br/>  mtime DATE,<br/>  photo BLOB<br/>);</p>
<h4>主題一:</h4>
<p style="padding-left: 30px;">建立 Fossil SCM 倉儲</p>
<p style="padding-left: 30px;">修改使用者密碼: fossil user password user_name user_password -R repo.fossil</p>
<p style="padding-left: 30px;">Python 與 SQLite</p>
<p style="padding-left: 30px;">CMSiMDE 與 SQLite - 也許可以試著將 content.htm 或靜態網頁內容存入 SQLite 資料表中.</p>
<p style="padding-left: 30px;">利用 Python 讀取 Fossil SCM 資料庫內容:</p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/fossilpy">https://github.com/mdecourse/fossilpy</a></p>
<p style="padding-left: 30px;">利用 Python 與 delta 原理進行版次管理:</p>
<p style="padding-left: 60px;"><a href="https://github.com/ggicci/python-fossil-delta">https://github.com/ggicci/python-fossil-delta</a></p><h3>Compile Fossil</h3>
<p>自行編譯 <a href="https://www.fossil-scm.org">Fossil SCM</a> 的目的為 ____?</p>
<p><a href="https://www.fossil-scm.org">Fossil SCM</a> 提供 <a href="https://www.fossil-scm.org/home/doc/trunk/www/serverext.wiki">CGI Extensions</a> 功能的目的為何? <a href="https://en.wikipedia.org/wiki/CGI">CGI</a>, <a href="https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface">WSGI</a>, <a href="https://en.wikipedia.org/wiki/UWSGI">UWSGI</a> 則又是什麼?</p>
<p><a href="https://www.fossil-scm.org">Fossil SCM</a> 有什麼功能, 在機械設計相關的電腦輔助設計實習流程中, 能夠扮演 ____, ____, ____, ____ 角色?</p>
<p><a href="https://git-scm.com/">Git </a>之於 <a href="https://github.com/torvalds/linux">Linux kernel</a>, <a href="https://www.fossil-scm.org">Fossil SCM</a> 之於 <a href="https://sqlite.org/src/dir?ci=trunk">SQLite</a>, 分別代表什麼意義?</p>
<p>需要自行編譯 <a href="https://sqlite.org/src/dir?ci=trunk">SQLite</a> 原始碼嗎? <a href="https://sqlite.org/src/dir?ci=trunk">SQLite</a> 與 <a href="https://www.fossil-scm.org">Fossil SCM</a> 的原始碼與機電資整合軟硬體產品, 可能有任何關係嗎?</p>
<h4>SQLite and JSON:</h4>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/8652005/json-file-vs-sqlite-android">https://stackoverflow.com/questions/8652005/json-file-vs-sqlite-android</a></p>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/22789079/json-vs-sqlite-which-is-more-suitable-for-android-ios-development">https://stackoverflow.com/questions/22789079/json-vs-sqlite-which-is-more-suitable-for-android-ios-development</a></p>
<p style="padding-left: 30px;"><a href="https://www.reddit.com/r/roguelikedev/comments/j5ljzd/game_data_storage_json_sql/">https://www.reddit.com/r/roguelikedev/comments/j5ljzd/game_data_storage_json_sql/</a></p>
<p style="padding-left: 30px;"><a href="https://www.nicholasnadeau.com/post/2020/11/python-for-hardware-engineers-sqlite-or-how-i-learned-to-stop-worrying-and-love-databases/">https://www.nicholasnadeau.com/post/2020/11/python-for-hardware-engineers-sqlite-or-how-i-learned-to-stop-worrying-and-love-databases/</a></p>
<p style="padding-left: 30px;"><a href="https://www.nicholasnadeau.com/post/2020/10/new-series-python-for-hardware-engineering/">https://www.nicholasnadeau.com/post/2020/10/new-series-python-for-hardware-engineering/</a></p>
<p><a href="https://learnsql.com/blog/most-popular-sql-databases-2020/">https://learnsql.com/blog/most-popular-sql-databases-2020/</a></p>
<p><a href="https://towardsdatascience.com/top-10-databases-to-use-in-2021-d7e6a85402ba">https://towardsdatascience.com/top-10-databases-to-use-in-2021-d7e6a85402ba</a></p>
<p><a href="/downloads/2017_Research and Improvement of SQLite’s Concurrency Control Mechanism.pdf">2017_Research and Improvement of SQLite’s Concurrency Control Mechanism.pdf</a></p>
<p><a href="https://ieeexplore.ieee.org/document/8449187">2018 RMAS: Relational Multiagent System for CPS Prototyping and Programming</a> (必須在校園網路下載)</p>
<p><a href="/downloads/2019_Methods of a Heterogeneous Multi-agent Robotic System Group Control.pdf">2019_Methods of a Heterogeneous Multi-agent Robotic System Group Control.pdf</a></p>
<p><a href="/downloads/2020_Design And Development Of An Application For Database MaintenanceIn Inventory Management System Using Tkinter And Sqlite Platform.pdf">2020_Design And Development Of An Application For Database MaintenanceIn Inventory Management System Using Tkinter And Sqlite Platform.pdf</a></p>
<hr/>
<p>一般將 Ubuntu 中的 fossil 設為 server, 配合 Stunnel 建立 https 介面, 而 Windows 中的 fossil.exe 則作為 client, 兩者可以透過 fossil version 查詢版次, 必須注意 server 與 client 的 Fossil SCM 版次是否相應, 以免無法使用新版本 Fossil SCM 可能新增的功能.</p>
<h4>Ubuntu 操作系統:</h4>
<p>下載 Fossil SCM 最新版本原始碼:</p>
<p style="padding-left: 30px;">點選 <a href="https://www.fossil-scm.org/home/timeline">Timeline</a>, 選擇最新版號對應的連結, 例如: <a href="https://www.fossil-scm.org/home/info/7aedd5675883d441">Fossil SCM 2.16 版</a>. 點選 <a href="https://www.fossil-scm.org/home/zip/7aedd567/Fossil-7aedd567.zip">ZIP archive</a> 下載後解開原始碼壓縮檔案.</p>
<p style="padding-left: 30px;">由於操作系統為 Ubuntu, 根據<a href="https://superuser.com/questions/371901/openssl-missing-during-configure-how-to-fix">說明</a>, 可以利用 sudo apt install libssl-dev 安裝所需的 OpenSSL 程式庫開發檔案.</p>
<p style="padding-left: 30px;">利用 xterm 命令列進入 Fossil SCM 原始碼所在目錄後, 執行 ./configure 後, 再執行 make 就可以建立 fossil 可執行檔案. 只不過檔案大小約 17 MB, 若利用 ./configure --static 所建立的 fossil 則將近 22 MB.</p>
<h4>Windows 64 位元操作系統:</h4>
<p style="padding-left: 30px;">以下將採用 <a href="https://www.msys2.org/">MSYS2</a> 執行編譯.</p>
<p style="padding-left: 30px;">從 <a href="http://gnuwin32.sourceforge.net/packages/coreutils.htm">Gnuwin32 coreutils</a> 取得視窗環境下執行的 cat 與 grep.</p>
<p style="padding-left: 30px;">下載 Fossil SCM 最新版原始碼與上列 Ubuntu 相同.</p>
<p style="padding-left: 30px;">由於採用 <a href="https://www.msys2.org/">MSYS2</a>, 因此必須在 mingw64.exe 啟動後的介面, 以 pacman -S openssl-devel 安裝所需的 OpenSSL 程式庫開發檔案, 其中包括 libssl.a 與 libcrypto.a 等兩個靜態程式庫.</p>
<h4 style="padding-left: 30px;">make.exe 檔案複製:</h4>
<p style="padding-left: 60px;">由於已經將 Y:\msys64_20210419\mingw64\bin\mingw32-make.exe 複製一份為 make.exe, 因此之後可以直接以 make 命令執行.</p>
<h4 style="padding-left: 30px;">windres.exe 檔案複製:</h4>
<p style="padding-left: 60px;">另外必須要將 Y:\msys64_20210419\mingw64\bin\windres.exe 複製一份為 x86_64-w64-mingw32-windres.exe, 因為 win/Makefile.mingw 中會採用:</p>
<p style="padding-left: 90px;">RCC = $(PREFIX)windres -I$(SRCDIR)</p>
<p style="padding-left: 60px;">轉換 Windows 原始碼中的 Resource files, 而 PREFIX 變數在下列將設定為 x86_64-w64-mingw32-.</p>
<h4 style="padding-left: 30px;">先編譯 compat/zlib:</h4>
<p style="padding-left: 60px;">cd compat/zlib<br/>mingw32-make -f win32/Makefile.gcc</p>
<h4 style="padding-left: 30px;">Makefile.mingw 設定：</h4>
<p style="padding-left: 60px;"><a href="https://www.msys2.org/">MSYS2</a> 所使用的 Makefile 位於 Fossil SCM 原始碼目錄中的 win/Makefile.mingw 檔案, 以 SciTE 編輯此一檔案時, 將第 22 行改為:</p>
<p style="padding-left: 90px;">PREFIX = x86_64-w64-mingw32-</p>
<p style="padding-left: 90px;">表示編譯完成的 fossil.exe 要在 x86_64-w64-mingw32 平台上執行.</p>
<p style="padding-left: 60px;">第 63 行改為:</p>
<p style="padding-left: 90px;">FOSSIL_ENABLE_SSL = 1</p>
<p style="padding-left: 90px;">表示編譯後的 fossil.exe 要能夠在 https 網路協定中使用.</p>
<h4 style="padding-left: 30px;">OpenSSL 靜態程式庫檔案:</h4>
<p style="padding-left: 60px;">將 pacman -S openssl-devel 安裝後, 在Y:\msys64_20210419\mingw64\lib 目錄中的 libssl.a 與 libcrypto.a 檔案放入 Fossil SCM 原始碼目錄中.</p>
<h4 style="padding-left: 30px;">執行編譯與連結:</h4>
<p style="padding-left: 60px;">make -f win/Makefile.mingw LIB="-l:libssl.a -l:libcrypto.a -lgdi32 -lmingwex -lz -lws2_32 -municode"</p>
<p style="padding-left: 60px;">此處採直接連結 libssl.a 與 libcrypto.a 的方式進行編譯, 完成後的 fossil.exe, 檔案大小約 8MB.</p><h3>Althttpd</h3>
<p>Althttpd is a simple webserver that has run the https://sqlite.org/ website since 2004. Althttpd strives for simplicity, security, and low resource usage.</p>
<p><a href="https://sqlite.org/althttpd/doc/trunk/althttpd.md">https://sqlite.org/althttpd/doc/trunk/althttpd.md</a></p>
<p></p><h2>Robotics</h2>
<p><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.225.7025&amp;rep=rep1&amp;type=pdf">Q Learning for Robot Control.pdf</a></p>
<p><a href="https://www.ri.cmu.edu/pub_files/2013/7/Kober_IJRR_2013.pdf">Reinforcement Learning in Robotics: A Survey</a></p>
<p><a href="/downloads/Deep Reinforcement Learning for the Control of Robotic Manipulation- A Focussed Mini-Review.pdf">Deep Reinforcement Learning for the Control of Robotic Manipulation- A Focussed Mini-Review.pdf</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6L-V4xzUcmM" title="YouTube video player" width="560"></iframe></p>
<h4>Related Courses:</h4>
<p style="padding-left: 30px;"><a href="http://ais.informatik.uni-freiburg.de/teaching/ss21/robotics/">http://ais.informatik.uni-freiburg.de/teaching/ss21/robotics/</a></p>
<p style="padding-left: 30px;"><a href="http://ais.informatik.uni-freiburg.de/teaching/ws20/mapping/">http://ais.informatik.uni-freiburg.de/teaching/ws20/mapping/</a></p>
<p><a href="https://github.com/mithi/robotics-coursework">https://github.com/mithi/robotics-coursework</a> (<a href="https://medium.com/@mithi/robotics-prototyping-zero-to-hero-dfc49cdd8a19">steps</a>)</p>
<h4>Related Ebooks:</h4>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-23026-4">Principles of Physics</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-91041-3">Applied Linear Algebra</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-01851-5">Fundamentals of Robotic Mechanical Systems</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-20144-8">Robotics, Vision and Control</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-32552-1">Springer Handbook of Robotics</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-72911-4">Robotics</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-84628-642-1">Robotics</a> (在校園網路下載電子書))</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-981-15-8053-6">Automotive Cyber Security</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4020-2110-7">Fundamentals of Mechanicsof Robotic Manipulation</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-030-20190-6">Robot Operating System</a> (在校園網路下載電子書)</p>
<p style="padding-left: 30px;"><a href="https://www.nicholasnadeau.com/publication/nadeau-2019-pybotics/">https://www.nicholasnadeau.com/publication/nadeau-2019-pybotics/</a></p>
<h4>CoppeliaSim:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Obstacle-Avoidance-Using-A-Genetic-Algorithm">https://github.com/mdecourse/Obstacle-Avoidance-Using-A-Genetic-Algorithm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/PID_wall_following">https://github.com/mdecourse/PID_wall_following</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Painting-robot-simulation-in-V-rep">https://github.com/mdecourse/Painting-robot-simulation-in-V-rep</a></p>
<h4 style="padding-left: 30px;">IK</h4>
<h4 style="padding-left: 30px;">單軸, 雙軸, 多軸以及 Symbolic + Numerical Constraint Solver:</h4>
<p style="padding-left: 60px;">利用 CoppeliaSim GUI 流程設置求解 IK, 全部利用 API 程式流程設置求解 IK, 利用自行推導的數學式求解 IK, 終至利用自行設計編寫的通用 Symbolic + Numerical Constraint Solver 求解 IK.</p>
<p style="padding-left: 60px;"><a href="https://wiki.blender.org/wiki/Source/Animation/IK">https://wiki.blender.org/wiki/Source/Animation/IK</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Building-a-Better-IK-Solver.pdf">Building-a-Better-IK-Solver.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/Mobile-Manipulation">https://github.com/mdecourse/Mobile-Manipulation</a></p>
<h4 style="padding-left: 30px;">BlueZero remote API:</h4>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/Robotics-Research">https://github.com/mdecourse/Robotics-Research</a></p>
<h4 style="padding-left: 30px;">其他:</h4>
<p style="padding-left: 60px;"><a href="https://github.com/craigiedon/ProbRobScene">https://github.com/craigiedon/ProbRobScene</a></p>
<p style="padding-left: 90px;"><a href="https://arxiv.org/pdf/2011.01126.pdf">ProbRobScene - A Probabilistic Specification Languagefor 3D Robotic Manipulation Environments</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/coppelia_gui_robot_control_python">https://github.com/mdecourse/coppelia_gui_robot_control_python</a></p><h3>FMS</h3>
<p>在 <a href="https://www.coppeliarobotics.com/">CoppeliaSim </a>場景中, 從手動組裝自動化生產設備 (<a href="https://en.wikipedia.org/wiki/Industrial_robot">Industrial Robot</a>, <a href="https://en.wikipedia.org/wiki/Conveyor_system">Conveyor</a>, <a href="https://en.wikipedia.org/wiki/Automated_guided_vehicle">AGVS</a> 與 <a href="https://en.wikipedia.org/wiki/Automated_storage_and_retrieval_system">AS/RS</a> 設施等), 終至完成一套 <a href="https://en.wikipedia.org/wiki/Flexible_manufacturing_system">Flexible Manufacturing System</a> (彈性製造系統).</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-540-85414-2">Design of Flexible Production Systems</a> (在校園網路下載電子書）</p>
<p><a href="http://mde.tw/cd2021/content/%E5%85%AD%E8%BB%B8%E6%A9%9F%E6%A2%B0%E8%87%82%E6%A8%A1%E5%9E%8B.html">Robot 機械手臂模型</a></p>
<p>Import Robot from Solidworks into Coppeliasim: <a href="https://www.youtube.com/watch?v=jfUA2W-niIc">https://www.youtube.com/watch?v=jfUA2W-niIc</a></p>
<p style="padding-left: 30px;">URDF: <a href="https://wiki.ros.org/urdf">https://wiki.ros.org/urdf</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mmatl/urdfpy">https://github.com/mmatl/urdfpy</a></p>
<p style="padding-left: 30px;"><a href="/downloads/kuka kr16 assembly URDF.rar">kuka kr16 assembly URDF.rar</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/channel/UCX6c67E5PTUq5W8n8POeO_w/videos">reference videos</a></p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/urdfPlugin.htm">https://www.coppeliarobotics.com/helpFiles/en/urdfPlugin.htm</a></p>
<p style="padding-left: 30px;">simExtURDF: <a href="https://github.com/CoppeliaRobotics/simExtURDF">https://github.com/CoppeliaRobotics/simExtURDF</a></p>
<h4>CoppeliaSim Import and Export:</h4>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">https://www.coppeliarobotics.com/helpFiles/en/importExport.htm</a></p>
<h4>XML Editor:</h4>
<p style="padding-left: 30px;"><a href="https://microsoft.github.io/XmlNotepad/">https://microsoft.github.io/XmlNotepad/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/lbellonda/qxmledit">https://github.com/lbellonda/qxmledit</a></p>
<h3>RL</h3>
<h4>Gym:</h4>
<p style="padding-left: 30px;">Gym is a toolkit for developing and comparing reinforcement learning algorithms.</p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/reinforcement-learning-with-openai-d445c2c687d2">https://towardsdatascience.com/reinforcement-learning-with-openai-d445c2c687d2</a></p>
<p style="padding-left: 30px;"><a href="https://gym.openai.com/docs/">https://gym.openai.com/docs/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/openai/gym">https://github.com/openai/gym</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2021_Adaptation of Openai Gym for Moveo Platform.pdf">Adaptation of Openai Gym for Moveo Platform.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Sim-Env- Decoupling OpenAI GymEnvironments from Simulation Models.pdf">Sim-Env- Decoupling OpenAI GymEnvironments from Simulation Models.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://ctmakro.github.io/site/on_learning/rl/vrep.html">https://ctmakro.github.io/site/on_learning/rl/vrep.html</a></p>
<h4>Reinforcement Learning:</h4>
<p style="padding-left: 30px;"><a href="https://datawhalechina.github.io/easy-rl/">https://datawhalechina.github.io/easy-rl/</a> (中文教程)</p>
<p style="padding-left: 60px;"><a href="https://github.com/datawhalechina/easy-rl">https://github.com/datawhalechina/easy-rl</a> </p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5127-0">Applying Reinforcement Learning With Python</a> (校園網路下載電子書)</p>
<p style="padding-left: 60px;">Reinforcement Learning in some sense is a rebranding of <span style="background-color: #ffff99;">optimal control</span>, which is a concept extending from control theory. Optimal control has its origins in the 1950s and 1960s, where it was used to describe a problem where one is trying to achieve a certain "optimal" criterion and what "control" law is needed to achieve this end.</p>
<p style="padding-left: 60px;">Typically, we define an optimal control as a set of differential equations. These equations then define a path toward values that minimize the value of the error function. The core of optimal control is the culmination of Richard Bellman’s work, specifically that of <span style="background-color: #ffff99;">dynamic programming</span>. Developed in the 1950s, dynamic programming is an optimization method that emphasizes the solving of a large individual problem by breaking it down into smaller and easier-to-solve components.</p>
<p style="padding-left: 60px;">It is also considered the only feasible method of solving <span style="background-color: #ffff99;">stochastic optimal control problems</span> and moreover consider in general all of optimal control to be reinforcement learning.</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/4072pj1">https://github.com/mdecourse/4072pj1</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/vrep-env">https://github.com/mdecourse/vrep-env</a></p><h2>系統開發</h2>
<h4>GCS</h4>
<p>Geometric Constrain Solver(GCS) 在解決 ____ 問題?</p>
<p><a href="https://www.cs.purdue.edu/homes/cmh/distribution/papers/Constraints/CAD95.pdf">https://www.cs.purdue.edu/homes/cmh/distribution/papers/Constraints/CAD95.pdf</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-3-642-58898-3">Geometric Constraint Solving and Applications ebook</a> (在校園網路下載電子書)</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-030-15729-6">Introduction to Machine Learning</a> (在校園網路下載電子書)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4899-7550-8">The Finite Element Method and Applications in Engineering Using ANSYS</a> (在校園網路下載電子書)</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-99693-6">Computational Methods for Fluid Dynamics</a></p>
<h4>In Python:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/ericPrince/constraint-solver">https://github.com/ericPrince/constraint-solver</a></p>
<p style="padding-left: 30px;"><a href="https://pypi.org/project/py-slvs/">https://pypi.org/project/py-slvs/</a></p>
<p style="padding-left: 30px;"><a href="https://pyslvs-ui.readthedocs.io/en/stable/python-solvespace-api/">https://pyslvs-ui.readthedocs.io/en/stable/python-solvespace-api/</a></p>
<h4 style="padding-left: 30px;">non-geometric:</h4>
<p style="padding-left: 60px;"><a href="https://stackabuse.com/constraint-programming-with-python-constraint">https://stackabuse.com/constraint-programming-with-python-constraint</a></p>
<p style="padding-left: 60px;"><a href="https://www.cvxpy.org/">https://www.cvxpy.org/</a></p>
<h4>In C++:</h4>
<p style="padding-left: 30px;"><a href="https://solvespace.com/tech.pl">https://solvespace.com/tech.pl</a></p>
<h4>In Rust:</h4>
<p style="padding-left: 30px;"><a href="https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/">https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/</a> </p>
<p style="padding-left: 30px;"><a href="https://crates.io/crates/arcs">https://crates.io/crates/arcs</a></p>
<p style="padding-left: 30px;">CAD Kernel in Rust: <a href="https://github.com/ricosjp/truck">https://github.com/ricosjp/truck</a></p>
<p style="padding-left: 30px;"><a href="https://www.cis.upenn.edu/~jean/geomcs-v2.pdf">curves_and_surfaces_in_geometric_modeling_v2.pdf</a></p><h3>Optimization</h3>
<p><a href="https://link.springer.com/book/10.1007/978-3-662-44874-8">Introduction to Evolutionary Computing</a> (校園網路下載電子書)</p>
<h3>Meta</h3>
<h4>你 Meta 了沒有?:</h4>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Metaprogramming">https://en.wikipedia.org/wiki/Metaprogramming</a></p>
<p style="padding-left: 30px;">Metaprogramming is a programming technique in which computer programs have the ability to treat other programs as their data. It means that a program can be designed to read, generate, analyze or transform other programs, and even modify itself while running.</p>
<p style="padding-left: 30px;">Metaprogramming can be used to move computations from run-time to compile-time, to generate code using compile time computations, and to enable self-modifying code. The ability of a programming language to be its own metalanguage is called reflection. Reflection is a valuable language feature to facilitate metaprogramming.</p>
<p><a href="https://elixirschool.com/zh-hant/lessons/advanced/metaprogramming/">https://elixirschool.com/zh-hant/lessons/advanced/metaprogramming/</a></p>
<p><a href="https://serokell.io/blog/elixir-metaprogramming">https://serokell.io/blog/elixir-metaprogramming</a></p><h3>Rust</h3>
<h4>Rust 線上編譯執行網站:</h4>
<p style="padding-left: 30px;"><a href="https://play.rust-lang.org/">https://play.rust-lang.org/</a></p>
<p style="padding-left: 30px;"><a href="https://kaisery.github.io/trpl-zh-cn/title-page.html">Rust 程式設計語言</a> (中文版)</p>
<p style="padding-left: 30px;"><a href="https://doc.rust-lang.org/stable/book/">https://doc.rust-lang.org/stable/book/</a> </p>
<p style="padding-left: 30px;"><a href="https://www.itread01.com/content/1546256884.html">About Rust Macro</a> (巨集)</p>
<h4>Ｗindows Rust 可攜系統:</h4>
<h4 style="padding-left: 30px;">start_ipv6.bat 相關設定:</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for Rust
set MINGW_PATH=%path_msys2%;
set GIT_PATH=%path_git%;
set VSCODE_PATH=%path_vscode%
set RUSTUP_HOME=%Disk%:\Rust\rust
set CARGO_HOME=%Disk%:\Rust\cargo
set RUST_PATH=%CARGO_HOME%\bin</pre>
<h4>參考資料:</h4>
<h4 style="padding-left: 30px;">Rust and Assembly:</h4>
<p style="padding-left: 60px;"><a href="https://rustwasm.github.io/docs/book/">https://rustwasm.github.io/docs/book/</a></p>
<p style="padding-left: 30px;"><a href="https://stevedonovan.github.io/rust-gentle-intro/">https://stevedonovan.github.io/rust-gentle-intro/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/yewstack/yew">https://github.com/yewstack/yew</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>  (Web Assembley Binary Toolkit)</p>
<p style="padding-left: 30px;"><a href="https://doc.rust-lang.org/book/">Rust Programming Language.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.ralfj.de/projects/rust-101/main.html">https://www.ralfj.de/projects/rust-101/main.html</a></p>
<p style="padding-left: 30px;"><a href="https://doc.rust-lang.org/stable/rust-by-example/">https://doc.rust-lang.org/stable/rust-by-example/</a></p>
<p style="padding-left: 30px;"><a href="https://thenewstack.io/using-web-assembly-written-in-rust-on-the-server-side/">https://thenewstack.io/using-web-assembly-written-in-rust-on-the-server-side/</a> (Deno, Rust, Typescript, Webassembly)</p>
<p style="padding-left: 60px;"><a href="https://github.com/reselbob/wisesayingswasm">https://github.com/reselbob/wisesayingswasm</a></p>
<p></p><h3>Elixir</h3>
<p>Elixir 在解決 ____, ____, ____, ____等問題.</p>
<p><a href="/downloads/a_history_of_erlang.pdf">A history of Erlang</a></p>
<p><a href="https://github.com/dwyl/learn-elixir">https://github.com/dwyl/learn-elixir</a></p>
<p><a href="https://inquisitivedeveloper.com/tag/lwm-elixir/">https://inquisitivedeveloper.com/tag/lwm-elixir/</a></p>
<p><a href="https://www.phoenixframework.org/">https://www.phoenixframework.org/</a></p>
<h4>Elixir to Javascript:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/elixirscript/elixirscript">https://github.com/elixirscript/elixirscript</a></p>
<h4>Erlang VM in Rust:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/archseer/enigma">https://github.com/archseer/enigma</a></p>
<h4>Dart + Phoenix:</h4>
<p style="padding-left: 30px;"><a href="https://pub.dev/packages/phoenix_socket">https://pub.dev/packages/phoenix_socket</a></p>
<p style="padding-left: 30px;"><a href="https://pub.dev/packages/phoenix_wings">https://pub.dev/packages/phoenix_wings</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/approov/quickstart-flutter-elixir-phoenix-channels">https://github.com/approov/quickstart-flutter-elixir-phoenix-channels</a></p>
<p><a href="https://drive.google.com/file/d/1CZfEjvHtQSlAch83jHmw4Ivz6WubPu8h/view?usp=sharing">Erlang and Elixir portable.7z</a> for Windows</p>
<p>Mac: <a href="https://medium.com/@cseanc/setup-elixir-phoenix-on-your-mac-85c9e491fb1">https://medium.com/@cseanc/setup-elixir-phoenix-on-your-mac-85c9e491fb1</a></p>
<p><a href="https://ithelp.ithome.com.tw/articles/10192375">https://ithelp.ithome.com.tw/articles/10192375</a> (函數式編程 Elixir 簡介)</p>
<p>Can mechanical designer also take advantage of Elixir?</p>
<p style="padding-left: 30px;"><a href="https://phoenixframework.org/">https://phoenixframework.org/</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2394-9">Erlang and Elixir for Imperative Programmers</a> (ebook)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xrIjfIjssLE" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/OcExABAAsXs" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lxYFOM3UJzo" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zL2wcqS78UA" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/me4cANg9RMU" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://www.kabisa.nl/tech/when-elixirs-performance-becomes-rust-y/">https://www.kabisa.nl/tech/when-elixirs-performance-becomes-rust-y/</a></p>
<p><a href="https://www.infoq.com/news/2019/07/rust-elixir-performance-at-scale/">https://www.infoq.com/news/2019/07/rust-elixir-performance-at-scale/</a></p>
<h4>Elixir and IOT:</h4>
<p style="padding-left: 30px;"><a href="https://medium.com/@carlogilmar/learning-iot-first-steps-with-elixir-310c4ad4ab15">https://medium.com/@carlogilmar/learning-iot-first-steps-with-elixir-310c4ad4ab15</a></p>
<p style="padding-left: 30px;"><a href="https://www.verypossible.com/insights/aws-iot-core-elixir-and-nerves-a-crash-course">https://www.verypossible.com/insights/aws-iot-core-elixir-and-nerves-a-crash-course</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zWytNNPnJUk" title="YouTube video player" width="560"></iframe></p>
<h4>Elixir and reinforcement learning:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/doctorcorral/gyx">https://github.com/doctorcorral/gyx</a></p>
<p style="padding-left: 30px;"><a href="https://medium.datadriveninvestor.com/elixir-e-reinforcement-learning-i-3ecd9399d03c">https://medium.datadriveninvestor.com/elixir-e-reinforcement-learning-i-3ecd9399d03c</a></p>
<p style="padding-left: 30px;"><a href="https://www.erlang-solutions.com/blog/how-to-build-a-machine-learning-project-in-elixir/">https://www.erlang-solutions.com/blog/how-to-build-a-machine-learning-project-in-elixir/</a></p>
<p style="padding-left: 30px;"><a href="https://elixirforum.com/search?q=machine%20learning">https://elixirforum.com/search?q=machine%20learning</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/n0X61Ad8Ofo" title="YouTube video player" width="560"></iframe></p><h3>可攜 Elixir</h3>
<p>採用 Elixir 希望解決 ____ 問題?</p>
<p><a href="https://elixir-lang.org/blog/2013/08/08/elixir-design-goals/">https://elixir-lang.org/blog/2013/08/08/elixir-design-goals/</a> </p>
<p>在 Windows 環境中建立可攜 Erlang 與 Elixir 的方法, 是先在操作系統中安裝後, 將 Erlang 與 Elixir 目錄內容取出放入可攜系統 y:\ 中的 elixir 目錄後, 在控制台中分別解除 Erlang 與 Elixir 的系統安裝, 然後必須要進入取出放入隨身碟或系統其他目錄後, 先修改:</p>
<p>Y:\elixir\erl10.7\bin 以及 Y:\elixir\erl10.7\erts-10.7\bin 目錄中的兩個 erl.ini:</p>
<p>將原先設定為操作系統安裝的路徑, 改為隨身可攜系統的對應路徑:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[erlang] 
Bindir=Y:\\elixir\\erl10.7\\erts-10.7\\bin 
Progname=erl 
Rootdir=Y:\\elixir\\erl10.7\\ 
</pre>
<p>至於在隨身系統啟動後, 開啟互動式 Elixir 的 batch file, elixir.bat 內容為:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">"y:\elixir\erl10.7\bin\werl.exe" -env ERL_LIBS "y:\elixir\Elixir\lib" -user Elixir.IEx.CLI -extra --no-halt</pre>
<p>而 erlang.bat 則為:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">echo off
y:\elixir\erl10.7\bin\werl.exe</pre>
<p>另外, 在啟動隨身系統的 start_ipv6.bat 中則加入:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for Erlang and Elixir
set path_erlang=%Disk%:\elixir\erl10.7\bin\;%Disk%:\elixir\erl10.7\erts-10.7\bin;%Disk%:\elixir\elixir\bin\;
set ERTSPATH=%Disk%:\elixir\erl10.7\erts-10.7\bin
set ERLINI=%Disk%:\elixir\erl10.7\erts-10.7\bin\erl.ini</pre>
<p>並將 %path_erlang% 納入隨後的 Path 環境變數中.</p>
<p>如此就可以在啟動隨身系統後, 以 elixir.bat 啟動 Elixir 互動環境, 而執行 erlang.bat 則啟動 Erlang  互動環境.</p>
<h4>根據上述流程設定的 Elixir 可攜系統下載:</h4>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1CZfEjvHtQSlAch83jHmw4Ivz6WubPu8h/view?usp=sharing">Erlang 10.7 and Elixir portable.7z</a> for Windows (下載 62MB , 解開壓縮後 340MB)</p>
<p>基本操作: <a href="https://inquisitivedeveloper.com/lwm-elixir-75/">https://inquisitivedeveloper.com/lwm-elixir-75/</a></p><h1>可攜系統</h1>
<p>可攜系統在解決 ____ 問題?</p>
<p><a href="https://drive.google.com/file/d/1hTvN4mCk2b_enIK204HA0AVPsd3GPlh5/view?usp=sharing">portablekmol_base.7z</a> (下載 118MB, 解開壓縮後 148MB)</p>
<p style="padding-left: 30px;">包括 data 目錄與 start_ipv6.bat, start_ipv4.bat, stop.bat</p>
<p style="padding-left: 30px;">功能: 啟動後可以啟動 SciTE 編輯器, 可用於類解譯 ANSI C 程式, 以及 <a href="https://solvespace.com">Solvespace</a>.</p>
<p><a href="https://drive.google.com/file/d/1BGfN5R6Yw1e9Unm4u8GCRP4xcSuYfCSE/view?usp=sharing">Python395.7z</a> (下載 123MB, 解開壓縮後 495MB)</p>
<p style="padding-left: 30px;">功能: 與 <a href="https://drive.google.com/file/d/1hTvN4mCk2b_enIK204HA0AVPsd3GPlh5/view?usp=sharing">portablekmol_base.7z</a> 結合後, 可以利用 SciTE 編輯器執行 Python 程式.</p>
<p style="padding-left: 30px;">請注意: 由於 CMSiMDE 改用 adhoc ssl_context 啟動近端伺服器, 因此 Python 解譯系統必須加裝 pyopenssl 模組: pip install pyopenssl,  且安裝前要先將系統 proxy 暫時關閉.</p>
<p><a href="https://drive.google.com/file/d/1RW51wCJ056TdWvjharBKOl6FM9iewpHI/view?usp=sharing">portablegit_2.31.1.7z</a> (下載 60MB, 解開壓縮後 286MB)</p>
<p style="padding-left: 30px;">功能: 與 <a href="https://drive.google.com/file/d/1hTvN4mCk2b_enIK204HA0AVPsd3GPlh5/view?usp=sharing">portablekmol_base.7z</a> 結合後, 可以利用可攜程式系統的命令列視窗執行 git 指令.</p>
<p><a href="https://drive.google.com/file/d/1JDmc_b4BLwGh4hQ7Tatq02EXmiPLrNZV/view?usp=sharing">lua-5.4.3.7z</a> (下載 662KB, 解開壓縮後 4MB)</p>
<p style="padding-left: 30px;">功能: 與 <a href="https://drive.google.com/file/d/1hTvN4mCk2b_enIK204HA0AVPsd3GPlh5/view?usp=sharing">portablekmol_base.7z</a> 結合後, 可以利用 SciTE 編輯器執行 Lua 程式.</p>
<p><a href="https://drive.google.com/file/d/1u-Efwoizvqn9WJdcL0fez7a2d0ulGBcs/view?usp=sharing">PUTTY.7z</a> (下載 940KB, 解開壓縮後 4MB)</p>
<p style="padding-left: 30px;">功能: plink.exe 可以與 git 結合, 利用 Putty.exe 中所設定的 session 名稱進行 SSH 連線.</p>
<p><a href="https://drive.google.com/file/d/1m6cmWu9AZhkBj6wFn9IiJlShcpGbz05g/view?usp=sharing">msys64_20210419.7z</a> (下載 3.5GB, 解開壓縮後 12GB)</p>
<p style="padding-left: 30px;">功能: <a href="https://www.msys2.org/">Msys2</a> 安裝</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">pacman -S mingw-w64-x86_64-toolchain
pacman -Sy mingw-w64-x86_64-qt5
pacman -Sy mingw-w64-x86_64-qt5-static
pacman -Sy mingw-w64-x86_64-ffmpeg
pacman -Sy mingw-w64-x86-64-cmake</pre>
<p><a href="https://drive.google.com/file/d/17M7Ro9NO2mmycvwOuK-10yYgs2oxFwEB/view?usp=sharing">msys64_20210419_clean.7z</a> (下載 87MB , 解開壓縮後 374MB)</p>
<p style="padding-left: 30px;">功能: 尚未安裝任何 Package 的 <a href="https://www.msys2.org/">Msys2</a> 系統.</p>
<p><a href="https://drive.google.com/file/d/1X8icOyPgABAkKHYaDLXPSoy7U7nyxqzW/view?usp=sharing">Flutter_portable_20210707.7z</a> (下載 4.7 GB, 解開壓縮後約 20GB)</p>
<p style="padding-left: 30px;">可攜系統中的 Android sdk 容量約 7.5 GB, Flutter 與 Dart 容量約 1.6 GB, Java jdk 容量約 200MB. vscode 約 530 MB, home_mdecourse 目錄下含手機 emulator 檔案容量約 9.3 GB.</p>
<p><a href="https://drive.google.com/file/d/1MmLHqk2i3Ei2Bf3EoNOjaLVO6RHqJtb4/view?usp=sharing">node-v14.17.2-x64.7z</a> (下載 17MB, 解開壓縮後 78MB)</p>
<p><a href="https://drive.google.com/file/d/1SDLtjyddvFs9OHobMu7Ddx6Doa15RVMY/view?usp=sharing">rust_1.53.0_portable_for_msys2.7z</a> (下載 147MB , 解開壓縮後 1.13GB)</p>
<p><a href="https://drive.google.com/file/d/1CZfEjvHtQSlAch83jHmw4Ivz6WubPu8h/view?usp=sharing">Erlang 10.7 and Elixir portable.7z</a> for Windows (下載 62MB , 解開壓縮後 340MB)</p>
<p><a href="https://drive.google.com/file/d/1a9onsFJavy_eXDyzpLJIIVTxEhgAdRYV/view?usp=sharing">CoppeliaSimEdu 4.0.0.7z</a> for Windows 64 位元操作系統(下載 134MB, 解開壓縮後 337MB)</p>
<p><a href="https://drive.google.com/file/d/1nF63ZLxueDlRjWdzXxTg13Pc5MjeCecs/view?usp=sharing">CoppeliaSimEdu 4.0.0.zip</a> for Mac, 解開壓縮後必須將 coppeliaSim.app 目錄改名為 coppeliaSim 後進入執行sudo xattr -r -d com.apple.quarantine *, 以便解除 Mac 對非 App Store 下載套件所設定的隔離屬性. 然後以 /Users/account/copsim4/coppeliaSim/Contents/MacOS/coppeliaSim 啟動 Coppeliasim.</p>
<p><a href="https://drive.google.com/file/d/1iXtPtMOxH6-k7UiYrOS9BYRU4muJi_KM/view?usp=sharing">CoppeliaSimEdu 4.0.0.tar.xz</a> for Ubuntu</p>
<p style="padding-left: 30px;">功能: 可免費提供大學機電資整合課程使用, 且開放原始碼, 可用於機電資控制系統設計與模擬 (InfoMechaTronic control system design and simulation).</p>
<p><a href="https://drive.google.com/file/d/1ih24k0G-vKnB1OjOIxHV4Gyz-bmlxeCU/view?usp=sharing">robodk_522.7z</a> (下載 364MB, 解開壓縮後 1GB)</p>
<p style="padding-left: 30px;">功能: 提供限縮功能版本 Free Trial, 只可模擬但無法存檔, 可用於工業級機械手臂在線與離線控制系統設計與模擬.</p>
<p><a href="https://drive.google.com/file/d/1uDJCaxDsed_5ZTdsHNOfGQ51JnT3aNP0/view?usp=sharing">Range3.7z</a> (下載 27MB, 解開壓縮後 109MB)</p>
<p style="padding-left: 30px;">功能: 開放源 FEM (Finite Element Method) 分析套件.</p>
<p><a href="https://drive.google.com/file/d/1ITHNrhemifHloS_x3BAchyQxMUKma0AI/view?usp=sharing">webots-R2021a.7z</a> (下載 1.5GB, 解開壓所後 2.9GB)</p>
<p style="padding-left: 30px;">功能: 採 Apache 2.0 使用授權的開放源套件, 可用於機電資控制系統設計與模擬.</p><h2>Lua 解譯</h2>
<p>網際 Lua 解譯網頁: <a href="http://mde.tw/lab/downloads/lua/index.html">http://mde.tw/lab/downloads/lua/index.html</a></p>
<p>SciTE 編輯器中的 Lua.properties 設定:</p>
<p>選擇利用 y:\lua-5.4.3\luac 與 lua 編譯或解譯 .lua 程式檔案.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">command.compile.*.lua=y:\lua-5.4.3\luac -o "$(FileName).luc" "$(FileNameExt)"
# Lua 5.1
command.go.*.lua=y:\lua-5.4.3\lua "$(FileNameExt)"</pre>
<p></p>
<h1>CMSiMDE</h1>
<p>CMSiMDE (<a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a>) 是一套以 Python 與 Flask 框架編寫的網際內容管理系統,</p>
<p>使用 CMSiMDE 建議使用者安裝 flask flask_cors bs4 lxml pelican markdown leo 等模組. 其中的 flask flask_cors bs4 lxml pelican markdown為啟動 CMSiMDE 的必要模組, 而 leo 則是 CMSMDE 開發者所使用的大綱管理工具, 可以用於與 CMSiMDE 整合的 Pelican blog 及 Reveal.js 網際簡報編輯之用.</p>
<h2>建立網頁</h2>
<p>由於 CMSiMDE 帶有動態網頁與靜態網頁等兩個部分, 動態網頁執行時需要該伺服器能夠執行 Python 3, 以及 flask flask_cors bs4 lxml pelican markdown 等模組. 而靜態網頁的伺服則只需要 WWW Server 即可.</p>
<p>若使用者在 Github 使用 CMSiMDE 建立網頁, 可以透過 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> template 建立, 步驟與兩種設定方式如下:</p>
<ol>
<li>使用者登入 Github</li>
<li>將瀏覽器連線至 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 頁面後, 點擊 Use this template 按鈕後, 選擇所要採用的 repository 名稱後, 就可以建立以 CMSiMDE 作為子模組的 Github 倉儲.</li>
<li>假如使用者所選擇的倉儲名稱為: 帳號.github.io, 則 Github 會自動設定該倉儲的 main 分支為 Github Pages 根目錄, 意即一旦 Github Pages 完成轉檔 (提交訊息之後會出現綠勾), 則該倉儲的對應網頁將為: https://帳號.github.io</li>
<li>若使用利用 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 作為 template 所建立的倉儲名稱並非 帳號.github.io, 則使用者必須自行至該倉儲的 settings/Github Pages 選項中將 main branch 設為 Github Pages 對應的 root 目錄. 之後, Github 將會採用: 帳號.github.io/倉儲名稱 作為與該倉儲對應的 Github Pages 網址.</li>
</ol>
<h2>基本操作</h2>
<p>當使用者利用 cms.bat 啟用動態網站後, 即可利用瀏覽器 <a>https://localhost:9443</a> 在近端維護網站內容, 由於此時動態網站僅在 localhost 啟動, 因此可以使用內建的管理者密碼 "admin" 登入管理網站內容.</p>
<p>假如使用者修改 init.py 中的 ip 或 uwsgi 設定, 讓動態網站在外部 IP 啟動, 則必須自行透過動態網站中的 <span style="background-color: #ffff99;">config</span> 指令修改管理者密碼.</p>
<p>動態網站編輯表單中的 <span style="background-color: #ffff99;">config</span> 除了可更改網站管理者密碼外, 也可以更改網站的頁面內容標題 (外部標題可以透過 init.py 中的 site_title 更改).</p>
<h3>客製化</h3>
<p>假如利用 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 作為 template 所建立的 Github Pages 網站, 倉儲根目錄中的 cms.bat 可以在執行動態網站系統之後, 利用 pipe 讓 cms.bat 同時開啟 Firefox <a>https://localhost:9443</a></p>
<p>修改後的 cms.bat 如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">python cmsimde/wsgi.py 1&gt; nul | "C:\Program Files (x86)\Mozilla Firefox\firefox" https://localhost:9443</pre>
<p>前面 python cmsimde/wsgi.py 加上 1&gt; nul 的目的是因為 pipe 執行時會將前面指令執行結果轉為隨後執行指令的輸入, 而 1&gt; nul 則會將標準輸出的任何資料移除, 任何輸出不會影響 Firefox 執行.</p>
<h3>編輯網頁內容</h3>
<p>編輯 CMSiMDE 動態網站中的內容, 可以透過表單中的 <span style="background-color: #ffff99;">Edit All</span> 或 <span style="background-color: #ffff99;">Edit</span> 按鈕進行. <span style="background-color: #ffff99;">Edit</span> 可用於單頁編輯, 操作時先選擇左側的頁面標題, 等系統顯示該頁面內容後, 再點擊上方的 <span style="background-color: #ffff99;">Edit</span> 按鈕即可進入該頁面的編輯模式.</p>
<p><span style="background-color: #ffff99;">Edit All</span> 通常用於單次刪除所有頁面內容或者只保留特定頁面用, 點擊後會將所有頁面內容置於編輯器中.</p>
<h3>上傳與引用檔案</h3>
<p><span style="background-color: #000000; color: #ffffff;">File Upload</span> 可以讓使用者選擇近端多個檔案上傳至動態系統中的 downloads 目錄.</p>
<p>引用使用者上傳的檔案</p>
<p style="padding-left: 30px;"><a href="/downloads/python_book_01.pdf">python_book_01.pdf</a></p>
<h3>上傳與引用圖片</h3>
<p><span style="background-color: #000000; color: #ffffff;">Image Upload</span> 可以讓使用者選擇近端多個檔案上傳至動態系統中的 downloads 目錄.</p>
<p>引用使用者上傳的檔案</p>
<p style="padding-left: 30px;"><img caption="false" class="add_border" height="227" src="/images/nfu_logo_mde.png" width="200"/></p>
<p style="padding-left: 30px;"></p>
<h3>嵌入程式碼</h3>
<p>利用 Insert/Edit code 功能, 可以嵌入各種程式碼:</p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
rungeKutta(t0, x0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 函式求下列四個浮點變數值
    double k1 = h * dxdt(t0, x);
    double k2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * k1);
    double k3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * k2);
    double k4 = h * dxdt(t0 + h, x + k3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4);
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
  }
  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return x;
}

// 將微分方程式 "dx / dt = (t - x)/2" 定義為 dxdt 函式
dxdt(t, x) {
  return ((t - x) / 2);
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x = 1;
  num t = 2;
  double h = 0.2;
  print('The value of x at t=$t is: ${rungeKutta(t0, x, t, h)}');
}
</pre>
<p></p>
<h3>嵌入影片檔</h3>
<p>直接利用 Source code 功能, 將影片檔案的 iframe 標註放入後存檔:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bZupkkT4T5c" width="560"></iframe></p>
<h3>檢視 STL</h3>
<p>使用 Github 所提供的 STL viewer 嵌入 github.com/mdecourse/cmstemplate main branch 中 downloads 目錄中的 spikeball.stl</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;script src="https://embed.github.com/view/3d/mdecourse/cmstemplate/main/downloads/spikeball.stl"&gt;&lt;/script&gt;</pre>
<p>將上列 script 標註放入頁面 HTML 內容後, 可以檢視 STL 零件檔案.</p>
<p></p>
<p>
<script src="https://embed.github.com/view/3d/mdecourse/cmstemplate/main/downloads/spikeball.stl"></script>
</p>
<p>以 CMSiMDE 內建的 static/viewstl.html 檢視 STL 檔案:</p>
<p>使用 iframe 其 src 指向 STL 檔案的絕對 URL 路徑:</p>
<p>/static/viewstl.html?src=https://mde.tw/cmstemplate/downloads/spikeball.stl</p>
<p>就可以如下檢視 downloads/spikeball.stl</p>
<p><iframe height="400" src="/static/viewstl.html?src=https://mde.tw/cmstemplate/downloads/spikeball.stl" width="600"></iframe></p>
<h2>Gitlab 同步</h2>
<p>利用 git remote add gitlab <a href="https://gitlab.com/user/repository.git">https://gitlab.com/user/repository.git</a> 可以在近端倉儲中的 .git/config 中新增一個名稱為 gitlab, 且與 <a href="https://gitlab.com/user/repository.git">https://gitlab.com/user/repository.git</a> 倉儲對應的設定. 使用者可以將此倉儲改版內容以 git push gitlab 推向 Gitlab.</p>
<p>至於 Gitlab Pages 額外需要下列 .yml 檔案進行轉換設定:</p>
<p>.gitlab-ci.yml</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">pages:
  stage: deploy
  script:
  - mkdir .public
  - cp -r * .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master
variables:
  GIT_SUBMODULE_STRATEGY: recursive</pre>
<p></p>
<h2>Heroku 部署</h2>
<p>與 Heroku 部署有關資訊請參考: <a href="https://mde.tw/cp2020/content/Heroku.html">https://mde.tw/cp2020/content/Heroku.html</a></p>
<h2>Fossil SCM</h2>
<p>在 Github 之外, 可以同步將各倉儲資料存放至 Gitlab, Heroku (有 500 MB 容量限制) 與 Fossil SCM.</p>
<p>希望整合 Github 與 Fossil SCM 倉儲步驟說明如下:</p>
<p>針對 Github 中已經有 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 倉儲, 希望同步建 <a href="https://fossil.kmol.info/cmstemplate">https://fossil.kmol.info/cmstemplate</a> 與之內容同步.</p>
<p>登入 fossil.kmol.info 主機, 在 /home/user/repository 目錄中, 以 fossil init cmstemplate.fossil 建立空倉儲. 此時 Fossil SCM 將會列出以登入帳號作為帳號的管理者密碼.</p>
<p>管理者利用 <a href="https://fossil.kmol.info/cmstemplate">https://fossil.kmol.info/cmstemplate</a> 連結, 以 user 登入, 並利用上列管理者密碼進入管理區, 先行透過 Setup/users 變更 user 對應密碼.</p>
<p>回到 Windows 以 <span style="background-color: #ffff99;">fossil clone https://user@fossil.kmol.info/cmstemplate cmstemplate.fossil</span> 取下倉儲資料, 過程中將需要輸入與 user 對應的密碼, 並被詢問是否儲存密碼, 若選擇儲存密碼則隨後的 fossil commit 將回自動提交推送.</p>
<p>接著在近端必須開啟空 cmstemplate.fossil 倉儲, 主要目的是取得 __FOSSIL__, 並且以 git pull 完整拉下位於 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 中的資料並與空 __FOSSIL__ 進行整合. 其中在 Fossil SCM 端必須將 Setup/Settings 中的 default-csp 設為: <a href="https://fonts.googleapis.com">https://fonts.googleapis.com</a> (讓 CMSiMDE 靜態網頁可以在 Fossil SCM doc 頁面中正常顯示), 且勾選 dotfiles (讓 Fossil SCM 可以儲存 .git 中的版本資料).</p>
<p></p>
<h4>參考資料:</h4>
<p>編譯 Fossil SCM:</p>
<p style="padding-left: 30px;"> <a href="http://project.mde.tw/blog/zai-msys2-huan-jing-bian-yi-fossil-scm.html">http://project.mde.tw/blog/zai-msys2-huan-jing-bian-yi-fossil-scm.html</a></p>
<h1>注意事項</h1>
<p>因為 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 將 CMSiMDE 倉儲作為 submodule, 因此使用者利用 cmstemplate 作為 template 後, 必須使用 git clone --recurse-submodules 取下遠端倉儲.</p>
<p>例如:</p>
<p style="padding-left: 30px;">若使用者的倉儲 URL 為 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p style="padding-left: 30px;">則可以在近端利用:</p>
<p style="padding-left: 30px;">git clone --recurse-submodules <a href="https://github.com/mdecourse/cmstemplate.git">https://github.com/mdecourse/cmstemplate.git</a></p>
<p style="padding-left: 30px;">將遠端倉儲資料存入 cmstemplate 目錄中.</p>
<p>目前的 cmstemplate 內建 cms.bat 與 acp.bat 等兩個 batch 檔案, 可以協助使用者直接在倉儲根目錄啟動 CMSiMDE 動態網頁, 以及單一指令式即可完成 git add, git commit 以及 git push, 但是前提是使用者必須設定以 ssh 方式與 Github 倉儲進行驗證.</p>
<p>例如:</p>
<p style="padding-left: 30px;">若使用者已經將倉儲內容 clone 至近端, 且已經帶有 cmsimde 子模組的內容.</p>
<p style="padding-left: 30px;">則可以在近端命令列進入 cmstemplate 倉儲目錄執行:</p>
<p style="padding-left: 30px;">cms.bat</p>
<p style="padding-left: 30px;">開啟動態網頁系統. 並以 <a>https://localhost:9443</a> 開啟.</p>
<p style="padding-left: 30px;">一旦完成動態網頁的編輯, 利用 Generate Pages 可以轉為靜態網站, 且各 html 檔案將位於 content 目錄中.</p>
<p style="padding-left: 30px;">若使用者希望檢查近端靜態網頁的內容, 可以利用 SciTE 開啟倉儲中的 http-server.py, 並利用瀏覽器以 <a href="https://localhost:8444">https://localhost:8444</a> 檢查靜態網頁內容.</p>
<p style="padding-left: 30px;">一旦使用者要將近端倉儲的動態與靜態網頁內容推向 Github, 則必須將倉儲中 .git/config 的 url, 從 https 改為 ssh 的連線格式:</p>
<p style="padding-left: 30px;">例如:</p>
<p style="padding-left: 60px;">原先 .git/config origin 的 url 為 url = <a href="https://github.com/mdecourse/cmstemplate.git,">https://github.com/mdecourse/cmstemplate.git,</a> 則必須改為:</p>
<p style="padding-left: 60px;">url = <a href="mailto:git@github.com:mdecourse/cmstemplate.git">git@github.com:mdecourse/cmstemplate.git</a></p>
<p style="padding-left: 60px;">之後假如使用者要以 "add some files" 字串當作提交說明訊息, 則可以在命令列中的倉儲目錄執行:</p>
<p style="padding-left: 60px;">acp.bat "add some files"</p>
<h2>標題選擇</h2>
<p>由於 CMSiMDE 中的動態網站透過 config/content.htm 的 H1~H3 超文件標註進行分頁, 因此使用者利用 cms.bat 開啟動態網站後, 必須注意各頁面標題文字的選擇:</p>
<ol>
<li><span style="background-color: #ffff99;">頁面標題文字儘量簡短</span> - 頁面標題就有如文章的章節標題, 只要該標題具有該頁面內容的代表性即可, 越簡短越好.</li>
<li><span style="background-color: #ffff99;">頁面標題文字不要使用標點符號</span> - 因為標點符號中的 "/" 會造成頁面擷取時 URL 指令分段上的誤判, 至於標題文字中若有 ":" 則會在動態內容轉靜態內容時, 因 Windows 不允許檔案名稱帶有 ":" 而無法轉檔.</li>
<li><span style="background-color: #ffff99;">頁面標題中不可以有超文件標註</span> - 由於 CMSiMDE 動態網站編輯器採用 GUI 進行, 採用滑鼠標修頁面標題時, 可能無意中將 HTML 標註放入 H1~H3 標題文字中, 如此可能會造成 CMSiMDE 分頁錯誤而無法開啟動態網站. 當使用者要檢查所使用的頁面標題是否帶有 html 標註, 可以透過編輯功能中的 Source Code 檢查.</li>
<li><span style="background-color: #ffff99;">H1 標題數量不可過多</span> - 由於 CMSiMDE 的靜態網站支援手機模式, 當頁面 H1 標題數量超過 10 個之後, 頁面標題可能無法在螢幕上最上方以一列顯示, 而是必須出現在第二行, 結果將會導致頁面展開時的 Javascript 程式產生錯亂, 結果為無法直接以滑鼠點擊進入特定頁面.</li>
</ol>
<p></p>
<p></p>
<h2>靜態網頁 404</h2>
<p>當使用者將近端網頁倉儲資料推向 Github 後, commit 提交訊息之後若沒有出現綠勾, 表示靜態網頁無法轉檔成功, 這時連接靜態網頁時, 將會出現 404, 通常情況下是因為倉儲中 cmsimde 子模組的版次無法與遠端 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 中的版本對應.</p>
<p>上述靜態網頁出現 404 錯誤訊息的處理方式如下:</p>
<ol>
<li>從 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 倉儲中複製最新版本的版次號, 以 <a href="https://github.com/mdecourse/cmsimde/commit/1c3aeec1f5d26b421743d2f5ef8bb7d5b99292af">2021/03/03 的版次</a>為例, 版次號為 1c3aeec1f5d26b421743d2f5ef8bb7d5b99292af, 使用者只需要最前面的 7 個字元, 也就是 1c3aeec.</li>
<li>然後在近端倉儲中, 以命令列進入 cmsimde 目錄後執行: <span style="background-color: #ffff99;">git checkout 1c3aeec</span></li>
<li>接著退回倉儲目錄, 以 git add, git commit 及 git push 將倉儲改版內容推向 Github 後應該就可以將倉儲正確轉為靜態網站內容.</li>
</ol>
<h2>動態網站錯誤</h2>
<p>CMSiMDE 動態網站經常出現的錯誤是無法對 config/content.htm 分頁, 這時可以利用 SCiTE 編輯 content.htm, 找尋是否 H1~H3 標註中是否帶有特殊符號, 如 "/" 或 ":" 等.</p>
<h1>延伸開發</h1>
<p>為了建立 responsive site:</p>
<p>靜態網頁:</p>
<p style="padding-left: 30px;">Javascript 程式庫:</p>
<p style="padding-left: 60px;"><a href="https://getbootstrap.com/">https://getbootstrap.com/</a></p>
<p>動態系統:</p>
<p style="padding-left: 30px;">Javascript editor</p>
<p style="padding-left: 60px;">TinyMCE: <a href="https://www.tiny.cloud/">https://www.tiny.cloud/</a></p>
<p style="padding-left: 30px;">Syntax highlighter: <a href="https://prismjs.com/">https://prismjs.com/</a></p>
<p style="padding-left: 30px;">Ajax bit by bit file uploader:</p>
<p style="padding-left: 30px;">Flask</p>
<p style="padding-left: 30px;">Flask_cors</p>
<p style="padding-left: 30px;">bs4</p>
<p style="padding-left: 30px;">lxml</p>
<p style="padding-left: 30px;">markdown</p>
<h2>已知問題</h2>
<p>cmsimde 是一套始終修改中的機械設計工程導向網際內容管理系統, 由於自 2013 年底開發至今, Python 已經從 3.6 進展到 3.9, 網際發展方向也從 html editor 趨向 markdown editor, WebGL 相關技術與 three.js 的整合也越發成熟.</p>
<p>因此面對</p>
<p><a href="https://github.com/mdecourse/virtualkossel">https://github.com/mdecourse/virtualkossel</a></p>
<p style="padding-left: 30px;"><a href="http://mde.tw/virtualkossel/">http://mde.tw/virtualkossel/</a></p>
<p>cmsimde 應該要導入更多動態零組件展示與互動相關的機械設計功能.</p>
<p>可以著力的方向:</p>
<p style="padding-left: 30px;"><a href="http://help.autodesk.com/view/fusion360/ENU/?guid=GUID-1C665B4D-7BF7-4FDF-98B0-AA7EE12B5AC2">Fusion 360 </a></p>
<p style="padding-left: 60px;"><a href="https://github.com/AutodeskFusion360">https://github.com/AutodeskFusion360</a></p>
<p style="padding-left: 30px;"><a href="https://stromberg.dnsalias.org/~strombrg/pybrowser/python-browser.html">https://stromberg.dnsalias.org/~strombrg/pybrowser/python-browser.html</a></p>
<p style="padding-left: 30px;"><a href="https://vpython.org/">https://vpython.org/</a></p>
<p style="padding-left: 30px;"><a href="https://www.glowscript.org/">https://www.glowscript.org/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/slembcke/Chipmunk2D">https://github.com/slembcke/Chipmunk2D</a></p>
<p style="padding-left: 60px;"><a href="http://www.pymunk.org/en/latest/">http://www.pymunk.org/en/latest/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mrjleo/python-physics-demos">https://github.com/mrjleo/python-physics-demos</a></p>
<p style="padding-left: 30px;">cango3d library: <a href="https://www.arc.id.au/Canvas3DGraphics.html">https://www.arc.id.au/Canvas3DGraphics.html</a></p>
<h3>IPv6</h3>
<p>參考: <a href="https://github.com/tinymce/tinymce/issues/4409">https://github.com/tinymce/tinymce/issues/4409</a> 中的 <a href="https://github.com/tinymce/tinymce/issues/4409#issuecomment-680282550">url parsing 修改</a>後, 目前已經可以在 local 與 IPv6 網路連線中啟用 tinymce4 editor.</p>
<h3>MathJax</h3>
<p>MathJax 引用問題:</p>
<p style="padding-left: 30px;"><a href="https://www.mathjax.org/">https://www.mathjax.org/</a></p>
<h3>html 分頁</h3>
<p>分頁失敗時會意外抹除 config\content.htm 中的所有內容</p>
<p>分頁失敗並不會提供 debug 建議</p>
<h3>template</h3>
<p>cmsimde 針對利用 Flask 產生頁面並未使用 Template, 為了讓程式更加模組化可以考慮納入 <a href="https://www.makotemplates.org/">Mako</a> template engine.</p>
<p></p>